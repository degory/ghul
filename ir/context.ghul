namespace IR is
    class CONTEXT is
        context: LLVM.Context;
        builder: LLVM.Builder;
        function: LLVM.Value;

        type_repository: TYPE_REPOSITORY;        

        init(
            context: LLVM.Context,
            builder: LLVM.Builder,
            function: LLVM.Value,
            type_repository: TYPE_REPOSITORY
        )
        is
            self.context = context;
            self.builder = builder;
            self.function = function;

            self.type_repository = type_repository;
        si
    si

    class CONTEXT_FACTORY is
        context: LLVM.Context;
        module: LLVM.Module;        
        builder: LLVM.Builder;

        type_repository: TYPE_REPOSITORY;

        init(
            context: LLVM.Context,
            module: LLVM.Module,
            builder: LLVM.Builder,

            type_repository: TYPE_REPOSITORY
        )
        is
            self.context = context;
            self.module = module;
            self.builder = builder;

            self.type_repository = type_repository;
        si

        create_context(function: Semantic.Symbol.Function) -> CONTEXT is
            let ir_type = type_repository.get_function_type(function.arguments, function.type);

            return
                new CONTEXT(
                    context,
                    builder,
                    LLVM.CORE.LLVMAddFunction(
                        module,
                        function.qualified_name.toCString(),
                        ir_type
                    ),
                    type_repository                    
                );
        si        
    si    
si
