namespace IR is
    use System;
    use LLVM;
    
    class BUILDER is
        _cns: char ptr;
        _context: Context;
        _builder: Builder;
        _block: LLVM.BasicBlock;

        init(context: Context, module: Module) is
            _cns = "".toCString();
            _context = context;
            _builder = CORE.LLVMCreateBuilderInContext(context);
        si        
    si

    class FUNCTION is
        _dummy: Type[] static;

        _context: Context;
        _function: Value;

        _block: BasicBlock;

        init(context: Context, module: Module, name: String) is
            _context = context;
            
            let int_type = CORE.LLVMInt32TypeInContext(context);
            let param_types = [int_type, int_type];

            let function_type = CORE.LLVMFunctionType(int_type, param_types.address, param_types.length, cast LLVM.Bool(0));

            _function = CORE.LLVMAddFunction(module, name.toCString(), function_type);
        si

        add_block() -> BasicBlock is
            _block = CORE.LLVMAppendBasicBlockInContext(_context, _function, "".toCString());
        si        
    si    
si
