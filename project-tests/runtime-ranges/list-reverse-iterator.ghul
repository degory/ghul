namespace Tests is
    use Microsoft.VisualStudio.TestTools.UnitTesting;

    use Collections.Iterable;
    use Collections.LIST;
    use Collections.LIST_REVERSE_ITERATOR;

    class LIST_REVERSE_ITERATOR_Should is
        @test()

        init() is si

        LIST_REVERSE_ITERATOR__iterator__given_empty_list__returns_no_elements() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]());

            expect_equal(collect(iterator) |, empty`[int]() |);
            assert_equal(collect(iterator), empty`[int]());
        si

        LIST_REVERSE_ITERATOR__iterator__given_single_element_list__returns_that_element() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1]));

            let result = collect(iterator);

            expect_equal(result |, [1] |);
            assert_equal(result, [1]);
        si

        LIST_REVERSE_ITERATOR__iterator__given_odd_length_multiple_element_list__returns_elements_in_reverse_order() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1, 2, 3, 6, 7, 8, 11]));

            let result = collect(iterator);

            expect_equal(result |, [11, 8, 7, 6, 3, 2, 1] |);
            assert_equal(result, [11, 8, 7, 6, 3, 2, 1]);
        si

        LIST_REVERSE_ITERATOR__iterator__given_even_length_multiple_element_list__returns_elements_in_reverse_order() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1, 2, 3, 6, 7, 8, 11, 3, 6, 2]));

            let result = collect(iterator);

            expect_equal(result |, [2, 6, 3, 11, 8, 7, 6, 3, 2, 1] |);
            assert_equal(result, [2, 6, 3, 11, 8, 7, 6, 3, 2, 1]);
        si
    si
si