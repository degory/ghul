namespace Tests is
    use IO.Std.write_line;
    use Collections;
    
    use Microsoft.VisualStudio.TestTools.UnitTesting;
    
    use Ghul.Pipes;
    
    empty[T]() -> T[] => System.Array.empty`[T]();
    
    iv[T](index: int, value: T) -> INDEXED_VALUE[T] => INDEXED_VALUE[T](index, value);
    
    expect_equal[T](a: T, b: T) is
        write_line("expect_equal: {a} == {b}", a, b);
    si
    
    assert_are_equal[T](expected: Iterable[T], actual: Pipe[T]) is
        let expected_elements = LIST[T]();
        let actual_elements = LIST[T]();
    
        expected_elements.add_range(expected);
        actual_elements.add_range(actual);
    
        CollectionAssert.are_equal(expected_elements, actual_elements);
    si

    assert_equal[T](a: Iterable[T], b: Iterable[T]) is
        // FIXME: can no-longer construct LIST[T] from an Iterable[T]
        // not sure if this is a change from .NET 6 to .NET 8 or if it's
        // a compiler bug:

        let la: Collections.LIST[T] = Collections.LIST[T]();
        let lb: Collections.LIST[T] = Collections.LIST[T]();

        la.add_range(a);
        lb.add_range(b);

        CollectionAssert.are_equal(la, lb);            
    si

    collect[T](iterator: LIST_REVERSE_ITERATOR[T]) -> Iterable[T] is
        let result = LIST[T]();

        while iterator.move_next() do
            result.add(iterator.current);
        od

        return result;
    si
si
