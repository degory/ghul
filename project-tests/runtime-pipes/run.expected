run test: ADAPTOR_PIPEShould.Count_EmptyArray_ReturnsZero
expect_equal: 0 == 0
finished: ADAPTOR_PIPEShould.Count_EmptyArray_ReturnsZero

run test: ADAPTOR_PIPEShould.Count_NonEmptyArray_ReturnsElementCount
expect_equal: 5 == 5
finished: ADAPTOR_PIPEShould.Count_NonEmptyArray_ReturnsElementCount

run test: ADAPTOR_PIPEShould.Iterator_ReturnsCorrectElements
expect_equal: a, b, c == a, b, c
finished: ADAPTOR_PIPEShould.Iterator_ReturnsCorrectElements

run test: ADAPTOR_PIPEShould.Iterator_ReturnsSelf
expect_equal: a, b, c == a, b, c
finished: ADAPTOR_PIPEShould.Iterator_ReturnsSelf

run test: ADAPTOR_PIPEShould.Pipe_FromArray_ReturnsInstanceOfADAPTOR_PIPE
expect_equal: Ghul.Pipes.ADAPTOR_PIPE[System.Int32] == Ghul.Pipes.ADAPTOR_PIPE[System.Int32]
finished: ADAPTOR_PIPEShould.Pipe_FromArray_ReturnsInstanceOfADAPTOR_PIPE

run test: CatPipeShould.Cat_ChainedCalls_CountReturnsSumOfAllCounts
expect_equal: 10 == 10
finished: CatPipeShould.Cat_ChainedCalls_CountReturnsSumOfAllCounts

run test: CatPipeShould.Cat_ChainedCalls_ReturnsConcatenationOfAllInputs
3, 4, 5, 1, 2, 1, 2, 3, 4, 5
expect_equal: 3, 4, 5, 1, 2, 1, 2, 3, 4, 5 == 3, 4, 5, 1, 2, 1, 2, 3, 4, 5
finished: CatPipeShould.Cat_ChainedCalls_ReturnsConcatenationOfAllInputs

run test: CatPipeShould.Cat_EmptyPlusNonEmpty_ReturnsSecondSequence
expect_equal: 1, 2, 3, 4, 5 == 1, 2, 3, 4, 5
finished: CatPipeShould.Cat_EmptyPlusNonEmpty_ReturnsSecondSequence

run test: CatPipeShould.Cat_EmptySequences_ReturnsEmptySequence
expect_equal:  == 
finished: CatPipeShould.Cat_EmptySequences_ReturnsEmptySequence

run test: CatPipeShould.Cat_NonEmptyPlusEmpty_ReturnsFirstSequence
expect_equal: 1, 2, 3, 4, 5 == 1, 2, 3, 4, 5
finished: CatPipeShould.Cat_NonEmptyPlusEmpty_ReturnsFirstSequence

run test: CatPipeShould.Cat_NonEmptyPlusNonEmpty_ReturnsBothSequencesInOrder
expect_equal: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 == 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
finished: CatPipeShould.Cat_NonEmptyPlusNonEmpty_ReturnsBothSequencesInOrder

run test: FilterPipeShould.Count_AlwaysTruePredicate_ReturnsElementCount
expect_equal: 4 == 4
finished: FilterPipeShould.Count_AlwaysTruePredicate_ReturnsElementCount

run test: FilterPipeShould.Count_EmptyList_ReturnsZero
expect_equal: 0 == 0
finished: FilterPipeShould.Count_EmptyList_ReturnsZero

run test: FilterPipeShould.Filter_CalledTwice_ReturnsOnlyElementsThatMatchBothPredicates
expect_equal: 4, 6, 8 == 4, 6, 8
finished: FilterPipeShould.Filter_CalledTwice_ReturnsOnlyElementsThatMatchBothPredicates

run test: FilterPipeShould.Filter_ConsecutiveNonMatchingValues_AreRemoved
expect_equal: 3, 4, 5, 3, 4, 5 == 3, 4, 5, 3, 4, 5
finished: FilterPipeShould.Filter_ConsecutiveNonMatchingValues_AreRemoved

run test: FilterPipeShould.Filter_LeadingNonMatchingValues_AreRemoved
expect_equal: 3, 4, 5, 6, 7 == 3, 4, 5, 6, 7
finished: FilterPipeShould.Filter_LeadingNonMatchingValues_AreRemoved

run test: FilterPipeShould.Filter_NonConsecutiveNonMatchingValues_AreRemoved
expect_equal: 3, 4, 5, 3, 4, 5 == 3, 4, 5, 3, 4, 5
finished: FilterPipeShould.Filter_NonConsecutiveNonMatchingValues_AreRemoved

run test: FilterPipeShould.Filter_TrailingNonMatchingValues_AreRemoved
expect_equal: 7, 6, 5, 4, 3 == 7, 6, 5, 4, 3
finished: FilterPipeShould.Filter_TrailingNonMatchingValues_AreRemoved

run test: FilterPipeShould.Iterator_AlwaysTruePredicate_ResultEqualsInput
finished: FilterPipeShould.Iterator_AlwaysTruePredicate_ResultEqualsInput

run test: FilterPipeShould.Iterator_ReturnsSelf
expect_equal: a, b, c == a, b, c
finished: FilterPipeShould.Iterator_ReturnsSelf

run test: IndexPipeShould.Index_EmptyArray_ReturnsEmptySequence
expect_equal:  == 
finished: IndexPipeShould.Index_EmptyArray_ReturnsEmptySequence

run test: IndexPipeShould.Index_MultipleElements_ReturnsExpectedSequence
expect_equal: (0,3), (1,4), (2,1), (3,5), (4,2), (5,3), (6,1), (7,4), (8,5) == (0,3), (1,4), (2,1), (3,5), (4,2), (5,3), (6,1), (7,4), (8,5)
finished: IndexPipeShould.Index_MultipleElements_ReturnsExpectedSequence

run test: IndexPipeShould.Index_MultipleElementsNegativeInitialIndex_ReturnsExpectedSequence
expect_equal: (-3,3), (-2,4), (-1,1), (0,5), (1,2), (2,3), (3,1), (4,4), (5,5) == (-3,3), (-2,4), (-1,1), (0,5), (1,2), (2,3), (3,1), (4,4), (5,5)
threw: IndexPipeShould.Index_MultipleElementsNegativeInitialIndex_ReturnsExpectedSequence
error: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException: CollectionAssert.AreEqual failed. (Element at index 0 do not match.)
   at Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowAssertFailed(String assertionName, String message) in /_/src/TestFramework/TestFramework/Assertions/Assert.cs:line 60
   at Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(ICollection expected, ICollection actual, String message, Object[] parameters) in /_/src/TestFramework/TestFramework/Assertions/CollectionAssert.cs:line 956
   at Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(ICollection expected, ICollection actual) in /_/src/TestFramework/TestFramework/Assertions/CollectionAssert.cs:line 894
   at Tests.assert_are_equal[T](IEnumerable`1 expected, Pipe actual)
   at Tests.IndexPipeShould.Index_MultipleElementsNegativeInitialIndex_ReturnsExpectedSequence()
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at Test.entry()

run test: IndexPipeShould.Index_MultipleElementsPositiveInitialIndex_ReturnsExpectedSequence
expect_equal: (3,3), (4,4), (5,1), (6,5), (7,2), (8,3), (9,1), (10,4), (11,5) == (3,3), (4,4), (5,1), (6,5), (7,2), (8,3), (9,1), (10,4), (11,5)
threw: IndexPipeShould.Index_MultipleElementsPositiveInitialIndex_ReturnsExpectedSequence
error: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException: CollectionAssert.AreEqual failed. (Element at index 0 do not match.)
   at Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowAssertFailed(String assertionName, String message) in /_/src/TestFramework/TestFramework/Assertions/Assert.cs:line 60
   at Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(ICollection expected, ICollection actual, String message, Object[] parameters) in /_/src/TestFramework/TestFramework/Assertions/CollectionAssert.cs:line 956
   at Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(ICollection expected, ICollection actual) in /_/src/TestFramework/TestFramework/Assertions/CollectionAssert.cs:line 894
   at Tests.assert_are_equal[T](IEnumerable`1 expected, Pipe actual)
   at Tests.IndexPipeShould.Index_MultipleElementsPositiveInitialIndex_ReturnsExpectedSequence()
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at Test.entry()

run test: IndexPipeShould.IndexedValue_ToString_ReturnsIndexAndValueInParentheses
expect_equal: (1234,ABCD) == (1234,ABCD)
finished: IndexPipeShould.IndexedValue_ToString_ReturnsIndexAndValueInParentheses

run test: MapPipeShould.Map_CalledTwice_AppliesBothFunctionsToEveryElementInCorrectOrder
expect_equal: 1-first-second, 2-first-second, 3-first-second, 4-first-second, 5-first-second, 6-first-second == 1-first-second, 2-first-second, 3-first-second, 4-first-second, 5-first-second, 6-first-second
finished: MapPipeShould.Map_CalledTwice_AppliesBothFunctionsToEveryElementInCorrectOrder

run test: MapPipeShould.Map_EmptyArray_ReturnsEmptySequence
expect_equal:  == 
finished: MapPipeShould.Map_EmptyArray_ReturnsEmptySequence

run test: MapPipeShould.Map_IntsToStrings_ReturnsExpectedSequence
expect_equal: 3, 4, 1, 5, 2, 3, 1, 4, 5 == 3, 4, 1, 5, 2, 3, 1, 4, 5
finished: MapPipeShould.Map_IntsToStrings_ReturnsExpectedSequence

run test: PipeOperatorShould.AppendTo_CalledTwice_AppendsStringRepresentationOfAllElementsTwice
finished: PipeOperatorShould.AppendTo_CalledTwice_AppendsStringRepresentationOfAllElementsTwice

run test: PipeOperatorShould.AppendTo_WithNoSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace
finished: PipeOperatorShould.AppendTo_WithNoSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace

run test: PipeOperatorShould.AppendTo_WithSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithThatSeparator
finished: PipeOperatorShould.AppendTo_WithSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithThatSeparator

run test: PipeOperatorShould.Pipe_FilterThenFilter_ReturnsOnlyElementsThatMatchBothPredicates
finished: PipeOperatorShould.Pipe_FilterThenFilter_ReturnsOnlyElementsThatMatchBothPredicates

run test: PipeOperatorShould.Pipe_FilterThenIndex_AppliesNewIndexes
finished: PipeOperatorShould.Pipe_FilterThenIndex_AppliesNewIndexes

run test: PipeOperatorShould.Pipe_FilterThenSkip_ReturnsFilteredTailSequence
finished: PipeOperatorShould.Pipe_FilterThenSkip_ReturnsFilteredTailSequence

run test: PipeOperatorShould.Pipe_FilterThenTake_ReturnsFilteredHeadSequence
finished: PipeOperatorShould.Pipe_FilterThenTake_ReturnsFilteredHeadSequence

run test: PipeOperatorShould.Pipe_FindEmptySequence_ReturnsMaybeNot
finished: PipeOperatorShould.Pipe_FindEmptySequence_ReturnsMaybeNot

run test: PipeOperatorShould.Pipe_FindMultipleMatchingElement_ReturnsFirstMatchingElement
finished: PipeOperatorShould.Pipe_FindMultipleMatchingElement_ReturnsFirstMatchingElement

run test: PipeOperatorShould.Pipe_FindNonEmptySequenceButNoMatch_ReturnsMaybeNot
finished: PipeOperatorShould.Pipe_FindNonEmptySequenceButNoMatch_ReturnsMaybeNot

run test: PipeOperatorShould.Pipe_FindSingleMatchingElement_ReturnsThatElement
finished: PipeOperatorShould.Pipe_FindSingleMatchingElement_ReturnsThatElement

run test: PipeOperatorShould.Pipe_FirstEmptySequence_ReturnsMaybeNot
finished: PipeOperatorShould.Pipe_FirstEmptySequence_ReturnsMaybeNot

run test: PipeOperatorShould.Pipe_HasNoElements_ReturnsFalse
finished: PipeOperatorShould.Pipe_HasNoElements_ReturnsFalse

run test: PipeOperatorShould.Pipe_HasSomeElementsButNoneMatch_ReturnsFalse
finished: PipeOperatorShould.Pipe_HasSomeElementsButNoneMatch_ReturnsFalse

run test: PipeOperatorShould.Pipe_HasSomeElementsMultipleMatches_ReturnsTrue
finished: PipeOperatorShould.Pipe_HasSomeElementsMultipleMatches_ReturnsTrue

run test: PipeOperatorShould.Pipe_HasSomeElementsOneMatches_ReturnsTrue
finished: PipeOperatorShould.Pipe_HasSomeElementsOneMatches_ReturnsTrue

run test: PipeOperatorShould.Pipe_IndexThenFilter_RetainsOriginalIndexes
finished: PipeOperatorShould.Pipe_IndexThenFilter_RetainsOriginalIndexes

run test: PipeOperatorShould.Pipe_IndexThenSkip_StartsIndexingFromCorrectOffset
finished: PipeOperatorShould.Pipe_IndexThenSkip_StartsIndexingFromCorrectOffset

run test: PipeOperatorShould.Pipe_IndexThenTake_StartsIndexingFromZero
finished: PipeOperatorShould.Pipe_IndexThenTake_StartsIndexingFromZero

run test: PipeOperatorShould.Pipe_Mapped_Running
finished: PipeOperatorShould.Pipe_Mapped_Running

run test: PipeOperatorShould.Pipe_MapThenMap_AppliesBothFunctionsToEveryElementInCorrectOrder
finished: PipeOperatorShould.Pipe_MapThenMap_AppliesBothFunctionsToEveryElementInCorrectOrder

run test: PipeOperatorShould.Pipe_MapThenSkip_ReturnsMappedTailSequence
finished: PipeOperatorShould.Pipe_MapThenSkip_ReturnsMappedTailSequence

run test: PipeOperatorShould.Pipe_MapThenTake_ReturnsMappedHeadSequence
finished: PipeOperatorShould.Pipe_MapThenTake_ReturnsMappedHeadSequence

run test: PipeOperatorShould.Pipe_Running
finished: PipeOperatorShould.Pipe_Running

run test: PipeOperatorShould.Pipe_SkipThenFilter_ReturnsFilteredTailSequence
finished: PipeOperatorShould.Pipe_SkipThenFilter_ReturnsFilteredTailSequence

run test: PipeOperatorShould.Pipe_SkipThenFirst_ReturnsCorrectElement
expect_equal: Ghul.MAYBE[System.Int32] == Ghul.MAYBE[System.Int32]
finished: PipeOperatorShould.Pipe_SkipThenFirst_ReturnsCorrectElement

run test: PipeOperatorShould.Pipe_SkipThenIndex_StartsIndexingFromZero
finished: PipeOperatorShould.Pipe_SkipThenIndex_StartsIndexingFromZero

run test: PipeOperatorShould.Pipe_SkipThenMap_ReturnsMappedTailSequence
finished: PipeOperatorShould.Pipe_SkipThenMap_ReturnsMappedTailSequence

run test: PipeOperatorShould.Pipe_TakeThenFilter_ReturnsFilteredHeadSequence
finished: PipeOperatorShould.Pipe_TakeThenFilter_ReturnsFilteredHeadSequence

run test: PipeOperatorShould.Pipe_TakeThenFirst_ReturnsFirstElement
finished: PipeOperatorShould.Pipe_TakeThenFirst_ReturnsFirstElement

run test: PipeOperatorShould.Pipe_TakeThenIndex_StartsIndexingFromZero
finished: PipeOperatorShould.Pipe_TakeThenIndex_StartsIndexingFromZero

run test: PipeOperatorShould.Pipe_TakeThenMap_ReturnsMappedHeadSequence
finished: PipeOperatorShould.Pipe_TakeThenMap_ReturnsMappedHeadSequence

run test: PipeOperatorShould.Sort_CalledTwice_SortsInLastComparerOrder
finished: PipeOperatorShould.Sort_CalledTwice_SortsInLastComparerOrder

run test: PipeOperatorShould.Sort_EnumeratedTwice_ReturnsSameResultBothTimes
finished: PipeOperatorShould.Sort_EnumeratedTwice_ReturnsSameResultBothTimes

run test: PipeOperatorShould.Sort_GivenCompareFunction_SortsInCompareFunctionOrder
finished: PipeOperatorShould.Sort_GivenCompareFunction_SortsInCompareFunctionOrder

run test: PipeOperatorShould.Sort_GivenComparer_SortsInComparerOrder
finished: PipeOperatorShould.Sort_GivenComparer_SortsInComparerOrder

run test: PipeOperatorShould.Sort_NoComparer_SortsInDefaultOrder
finished: PipeOperatorShould.Sort_NoComparer_SortsInDefaultOrder

run test: PipeOperatorShould.ToString_CalledTwice_ReturnsStringRepresentationOfAllElements
finished: PipeOperatorShould.ToString_CalledTwice_ReturnsStringRepresentationOfAllElements

run test: PipeOperatorShould.ToString_WithNoSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace
finished: PipeOperatorShould.ToString_WithNoSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace

run test: PipeOperatorShould.ToString_WithSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithThatSeparator
finished: PipeOperatorShould.ToString_WithSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithThatSeparator

run test: PipeShould.AppendTo_CalledTwice_AppendsStringRepresentationOfAllElementsTwice
finished: PipeShould.AppendTo_CalledTwice_AppendsStringRepresentationOfAllElementsTwice

run test: PipeShould.AppendTo_WithNoSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace
finished: PipeShould.AppendTo_WithNoSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace

run test: PipeShould.AppendTo_WithSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithThatSeparator
finished: PipeShould.AppendTo_WithSeparatorArgument_AppendsStringRepresentationOfAllElementsSeparatedWithThatSeparator

run test: PipeShould.Pipe_FilterThenFilter_ReturnsOnlyElementsThatMatchBothPredicates
finished: PipeShould.Pipe_FilterThenFilter_ReturnsOnlyElementsThatMatchBothPredicates

run test: PipeShould.Pipe_FilterThenIndex_AppliesNewIndexes
finished: PipeShould.Pipe_FilterThenIndex_AppliesNewIndexes

run test: PipeShould.Pipe_FilterThenSkip_ReturnsFilteredTailSequence
finished: PipeShould.Pipe_FilterThenSkip_ReturnsFilteredTailSequence

run test: PipeShould.Pipe_FilterThenTake_ReturnsFilteredHeadSequence
finished: PipeShould.Pipe_FilterThenTake_ReturnsFilteredHeadSequence

run test: PipeShould.Pipe_FindEmptySequence_ReturnsMaybeNot
finished: PipeShould.Pipe_FindEmptySequence_ReturnsMaybeNot

run test: PipeShould.Pipe_FindMultipleMatchingElement_ReturnsFirstMatchingElement
finished: PipeShould.Pipe_FindMultipleMatchingElement_ReturnsFirstMatchingElement

run test: PipeShould.Pipe_FindNonEmptySequenceButNoMatch_ReturnsMaybeNot
finished: PipeShould.Pipe_FindNonEmptySequenceButNoMatch_ReturnsMaybeNot

run test: PipeShould.Pipe_FindSingleMatchingElement_ReturnsThatElement
finished: PipeShould.Pipe_FindSingleMatchingElement_ReturnsThatElement

run test: PipeShould.Pipe_FirstEmptySequence_ReturnsMaybeNot
finished: PipeShould.Pipe_FirstEmptySequence_ReturnsMaybeNot

run test: PipeShould.Pipe_HasNoElements_ReturnsFalse
finished: PipeShould.Pipe_HasNoElements_ReturnsFalse

run test: PipeShould.Pipe_HasSomeElementsButNoneMatch_ReturnsFalse
finished: PipeShould.Pipe_HasSomeElementsButNoneMatch_ReturnsFalse

run test: PipeShould.Pipe_HasSomeElementsMultipleMatches_ReturnsTrue
finished: PipeShould.Pipe_HasSomeElementsMultipleMatches_ReturnsTrue

run test: PipeShould.Pipe_HasSomeElementsOneMatches_ReturnsTrue
finished: PipeShould.Pipe_HasSomeElementsOneMatches_ReturnsTrue

run test: PipeShould.Pipe_IndexThenFilter_RetainsOriginalIndexes
finished: PipeShould.Pipe_IndexThenFilter_RetainsOriginalIndexes

run test: PipeShould.Pipe_IndexThenSkip_StartsIndexingFromCorrectOffset
finished: PipeShould.Pipe_IndexThenSkip_StartsIndexingFromCorrectOffset

run test: PipeShould.Pipe_IndexThenTake_StartsIndexingFromZero
finished: PipeShould.Pipe_IndexThenTake_StartsIndexingFromZero

run test: PipeShould.Pipe_Mapped_Running
finished: PipeShould.Pipe_Mapped_Running

run test: PipeShould.Pipe_MapThenMap_AppliesBothFunctionsToEveryElementInCorrectOrder
finished: PipeShould.Pipe_MapThenMap_AppliesBothFunctionsToEveryElementInCorrectOrder

run test: PipeShould.Pipe_MapThenSkip_ReturnsMappedTailSequence
finished: PipeShould.Pipe_MapThenSkip_ReturnsMappedTailSequence

run test: PipeShould.Pipe_MapThenTake_ReturnsMappedHeadSequence
finished: PipeShould.Pipe_MapThenTake_ReturnsMappedHeadSequence

run test: PipeShould.Pipe_Running
finished: PipeShould.Pipe_Running

run test: PipeShould.Pipe_SkipThenFilter_ReturnsFilteredTailSequence
finished: PipeShould.Pipe_SkipThenFilter_ReturnsFilteredTailSequence

run test: PipeShould.Pipe_SkipThenFirst_ReturnsCorrectElement
finished: PipeShould.Pipe_SkipThenFirst_ReturnsCorrectElement

run test: PipeShould.Pipe_SkipThenIndex_StartsIndexingFromZero
finished: PipeShould.Pipe_SkipThenIndex_StartsIndexingFromZero

run test: PipeShould.Pipe_SkipThenMap_ReturnsMappedTailSequence
finished: PipeShould.Pipe_SkipThenMap_ReturnsMappedTailSequence

run test: PipeShould.Pipe_TakeThenFilter_ReturnsFilteredHeadSequence
finished: PipeShould.Pipe_TakeThenFilter_ReturnsFilteredHeadSequence

run test: PipeShould.Pipe_TakeThenFirst_ReturnsFirstElement
finished: PipeShould.Pipe_TakeThenFirst_ReturnsFirstElement

run test: PipeShould.Pipe_TakeThenIndex_StartsIndexingFromZero
finished: PipeShould.Pipe_TakeThenIndex_StartsIndexingFromZero

run test: PipeShould.Pipe_TakeThenMap_ReturnsMappedHeadSequence
finished: PipeShould.Pipe_TakeThenMap_ReturnsMappedHeadSequence

run test: PipeShould.Sort_CalledTwice_SortsInLastComparerOrder
finished: PipeShould.Sort_CalledTwice_SortsInLastComparerOrder

run test: PipeShould.Sort_EnumeratedTwice_ReturnsSameResultBothTimes
finished: PipeShould.Sort_EnumeratedTwice_ReturnsSameResultBothTimes

run test: PipeShould.Sort_GivenCompareFunction_SortsInCompareFunctionOrder
finished: PipeShould.Sort_GivenCompareFunction_SortsInCompareFunctionOrder

run test: PipeShould.Sort_GivenComparer_SortsInComparerOrder
finished: PipeShould.Sort_GivenComparer_SortsInComparerOrder

run test: PipeShould.Sort_NoComparer_SortsInDefaultOrder
finished: PipeShould.Sort_NoComparer_SortsInDefaultOrder

run test: PipeShould.ToString_CalledTwice_ReturnsStringRepresentationOfAllElements
finished: PipeShould.ToString_CalledTwice_ReturnsStringRepresentationOfAllElements

run test: PipeShould.ToString_WithNoSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace
finished: PipeShould.ToString_WithNoSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithACommaAndSpace

run test: PipeShould.ToString_WithSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithThatSeparator
finished: PipeShould.ToString_WithSeparatorArgument_ReturnsStringRepresentationOfAllElementsSeparatedWithThatSeparator

