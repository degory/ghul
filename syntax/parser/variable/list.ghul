namespace Syntax.Parser.Variable is
    use System;
    use Generic;
    use Source;
    class LIST: BASE[Tree.Variable.LIST] is
        allow_empty: bool;
        variable_parser: Parser[Tree.Variable.NODE];

        init(variable_parser: Parser[Tree.Variable.NODE]) is
            super.init();

            self.variable_parser = variable_parser;
        si

        parse(context: CONTEXT) -> Tree.Variable.LIST is
            var start = context.location;
            var end = context.location;
            var variables = new Vector[Tree.Variable.NODE]();
            
            if 
                context.current.token==Lexical.TOKEN.IDENTIFIER || !allow_empty
                then
                do
                    var variable = variable_parser.parse(context);
                    end = variable.location;
                    variables.add(variable);
                    if context.current.token != Lexical.TOKEN.COMMA then
                        break;
                    else
                        context.next_token();
                    fi
                od
            fi
            return new Tree.Variable.LIST(start..end, variables);
        si

    si
si
