namespace Syntax is
    namespace Parser is
        namespace Expression is
            use System;
            use Generic;
            use Source;
            class LIST : BASE[Tree.Expression.LIST]  is
                expression_parser: Parser[Tree.Expression.NODE];
                init(expression_parser: Parser[Tree.Expression.NODE]) -> void is
                    super.init();
                    self.expression_parser = expression_parser;
                si

                description: String is
                    return "expression list";
                si

                parse(context: CONTEXT) -> Tree.Expression.LIST is
                    var start = context.location;
                    var expressions = new Vector[Tree.Expression.NODE]();
                    do
                        context.allow_tuple_element = true;
                        var expression = expression_parser.parse(context);
                        context.allow_tuple_element = false;
                        expressions.add(expression);
                        if context.current.token != Lexical.TOKEN.COMMA then
                            return new Tree.Expression.LIST(start .. expression.location, expressions);
                        fi
                        context.next_token();
                    od
                si

            si

        si
    si
si
