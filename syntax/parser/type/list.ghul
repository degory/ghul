namespace Syntax.Parser.TypeExpression is
    use Generic;

    class LIST: BASE[Tree.TypeExpression.LIST] is
        type_parser: Parser[Tree.TypeExpression.NODE];

        init(type_parser: Parser[Tree.TypeExpression.NODE]) is
            super.init();

            self.type_parser = type_parser;
        si

        parse(context: CONTEXT) -> Tree.TypeExpression.LIST is
            var elements = new Vector[Tree.TypeExpression.NODE]();
            var start = context.location;
            var end = context.location;

            do
                var element = type_parser.parse(context);
                elements.add(element);
                end = element.location;

                if context.current.token != Lexical.TOKEN.COMMA then
                    break;
                fi

                context.next_token();
            od

            return new Tree.TypeExpression.LIST(start::end, elements);
        si
    si
si
