namespace Syntax.Tree.Statement is
    use Generic;
    
    use Source;

    class DO: NODE is
        condition: Expression.NODE;
        body: Statement.LIST;

        children: Iterable[Tree.NODE] is
            var result = new Vector[Tree.NODE](2);

            if condition != null then
                result.add(condition);
            fi

            result.add(body);

            return result;
        si                

        init(location: LOCATION, condition: Expression.NODE, body: Statement.LIST) is
            super.init(location);
            self.condition = condition;
            self.body = body;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                if condition != null then
                    condition.walk(visitor);
                fi

                body.walk(visitor);
            fi

            accept(visitor);
        si
    si
si
