namespace Syntax.Tree.TypeExpression is
    use Generic;

    use Source;

    class NAMED: NODE  is
        name: Identifier.NODE;

        size: int => 8;

        init(location: LOCATION, name: Identifier.NODE) is
            super.init(location);
            self.name = name;
        si

        copy() -> NAMED =>
            new NAMED(
                location,
                name.copy()
            );

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                name.walk(visitor);
            fi
            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) is
            name = cast Identifier.NODE(m[name]);
        si

    si

si
