namespace Syntax is
    namespace Tree is
        namespace Identifier is
            use System;
            use Generic;
            use Source;
            class NODE : Tree.NODE , /* implements */ Iterable[String]  is
                name: String;
                accept(visitor: Visitor) -> void is
                    visitor.visit(self);
                si

                init(location: LOCATION, name: String) -> void is
                    super.init(location);
                    self.name = name;
                si

                parent: NODE is
                    return null;
                si

                parent_names: List[String] is
                    return new String[](0);
                si

                names: List[String] is
                    return [name]: String ;
                si

                Iterator: Iterator[String] is
                    return ([name]: String).Iterator;
                si

            si

            class QUALIFIED : NODE  is
                _parent: NODE;
                init(location: LOCATION, parent: NODE, name: String) -> void is
                    super.init(location, name);
                    self._parent = parent;
                si

                parent: NODE is
                    return _parent;
                si

                parent_names: List[String] is
                    var result = new Vector[String]();
                    var p = parent;
                    while p != null do
                        result.add(p.name);
                        p = p.parent;
                    od
                    return result;
                si

                names: List[String] is
                    var result = new Vector[String]();
                    result.add(name);
                    var p = parent;
                    while p != null do
                        result.add(p.name);
                        p = p.parent;
                    od
                    return result;
                si

                Iterator: Iterator[String] is
                    var result = new Vector[String]();
                    result.add(name);
                    var p = parent;
                    while p != null do
                        result.add(p.name);
                        p = p.parent;
                    od
                    return result.Iterator;
                si

                accept(visitor: Visitor) -> void is
                    visitor.visit(self);
                si

                walk(visitor: Visitor) -> void is
                    if !visitor.pre(self) then
                        if parent != null then
                            parent.walk(visitor);
                        fi
                    fi
                    accept(visitor);
                si

            si

        si
    si
si
