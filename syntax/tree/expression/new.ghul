namespace Syntax.Tree.Expression is
    use Generic;

    use Source;

    class NEW: NODE is
        arguments: TUPLE;
        
        init(location: LOCATION, type: Type.NODE, arguments: TUPLE) is
            super.init(location);
            self.type = type;
            self.arguments = arguments;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                type.walk(visitor);
                arguments.walk(visitor);
            fi
            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) is
            type = cast Type.NODE(m[type]);
            arguments = cast TUPLE(m[arguments]);
        si
    si
si
