namespace Syntax is
    namespace Tree is
        namespace Expression is
            use Generic;
            use Source;
            class SEQUENCE : NODE  is
                elements: LIST;
                init(location: LOCATION, elements: LIST, type_expression: TypeExpression.NODE) -> void is
                    super.init(location);
                    self.elements = elements;
                    self.type_expression = type_expression;
                si

                accept(visitor: Visitor) -> void is
                    visitor.visit(self);
                si

                walk(visitor: Visitor) -> void is
                    if !visitor.pre(self) then
                        elements.walk(visitor);
                        type_expression.walk(visitor);
                    fi
                si

                rewrite(m: Dict[Tree.NODE,Tree.NODE]) -> void is
                    type_expression = cast TypeExpression.NODE(m[type_expression]);
                    elements = cast LIST(m[elements]);
                si

            si

        si
    si
si
