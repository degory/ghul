namespace Syntax.Tree.Expression is
    use System;
    use Generic;

    use Source;

    class CALL: NODE is
        function: NODE;
        arguments: LIST;

        init(location: LOCATION, function: NODE, arguments: LIST) -> void is
            super.init(location);
            
            self.function = function;
            self.arguments = arguments;
        si

        accept(visitor: Visitor) -> void is
            visitor.visit(self);
        si

        walk(visitor: Visitor) -> void is
            if !visitor.pre(self) then
                arguments.walk(visitor);
                function.walk(visitor);
            fi

            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) -> void is
            function = cast NODE(m[function]);
            arguments = cast LIST(m[arguments]);
        si
    si
si
