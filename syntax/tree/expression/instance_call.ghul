namespace Syntax.Tree.Expression is
    use System;
    use Generic;

    use Source;

    class INSTANCE_CALL: NODE  is
        self_: NODE;
        name: String;
        arguments: LIST;
        type_expression: TypeExpression.NODE public;        
        
        init(location: LOCATION, self_: NODE, name: String, arguments: LIST, type_expression: TypeExpression.NODE) is
            super.init(location);
            self.self_ = self_;
            self.name = name;
            self.arguments = arguments;
            self.type_expression = type_expression;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                self_.walk(visitor);
                arguments.walk(visitor);
                type_expression.walk(visitor);
            fi
            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) is
            self_ = cast NODE(m[self_]);
            arguments = cast LIST(m[arguments]);
            type_expression = cast TypeExpression.NODE(m[type_expression]);
        si
    si
si
