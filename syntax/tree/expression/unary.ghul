namespace Syntax.Tree.Expression is
    use Generic;
    
    use Source;

    class UNARY: NODE  is
        operation: Identifier.NODE;

        right: NODE;

        init(location: LOCATION, operation: Identifier.NODE, right: NODE) is
            super.init(location);
            
            self.operation = operation;
            self.right = right;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                right.walk(visitor);
            fi
            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) is
            right = cast NODE(m[right]);
        si
    si
si
