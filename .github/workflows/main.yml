# CI pipeline. 
# Rn for pull requests and merges into the master branch - bootstraps the compiler, runs the tests and, for merges to master, pushes the built container

name: CI

on:
  pull_request:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
          
    - name: Docker Login
      run: ./build/docker-login.sh
      env:
        DOCKER_USER_NAME: ${{ secrets.DOCKER_USER_NAME }}  
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 

    - name: Bootstrap
      run: ./build/bootstrap.sh
      env:
        BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          
    - name: Docker Push
      if: ${{ github.event_name	== 'push' }}
      run: ./build/docker-push.sh
      
    - name: Docker Logout
      run: docker logout
      if: ${{ always() }}

    - name: Collect test conclusions
      id: conclusions
      run: |
        echo "::set-output name=tests::`cat tests/test-conclusion.txt`"
        echo "::set-output name=tests_legacy::`cat tests-legacy/test-conclusion.txt`"

    - uses: pCYSl5EDgo/cat@master
      if: ${{ always() }}
      id: tests
      with:
        path: tests/test-output-canned.json        

    - uses: pCYSl5EDgo/cat@master
      if: ${{ always() }}
      id: tests_legacy
      with:
        path: tests-legacy/test-output-canned.json

    - uses: LouisBrunner/checks-action@v0.1.0
      if: ${{ always() }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Tests
        conclusion: neutral
        output: ${{ steps.tests.outputs.text }}

    - uses: LouisBrunner/checks-action@v0.1.0
      if: ${{ always() }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Legacy tests
        conclusion: neutral
        output: ${{ steps.tests_legacy.outputs.text }}
