namespace Semantic is
    use System;
    use Generic;

    class INNATE_SYMBOL_LOOKUP is
        _ghul_namespace: Scope;

        init(symbol_table: SYMBOL_TABLE) is
            let global_scope = symbol_table.global_scope;

            let ghul_symbol = global_scope.find_direct("Ghul");

            _ghul_namespace = cast Semantic.Scope(ghul_symbol);
        si

        get_symbol(name: String) -> Semantic.Symbol.BASE
            => _ghul_namespace.find_direct(name);

        get_class(name: String) -> Semantic.Symbol.ScopedWithInheritance
            => cast Semantic.Symbol.ScopedWithInheritance(get_symbol(name));

        get_type(name: String) -> Semantic.Type.NAMED is
            let symbol = get_class(name);

            return new Semantic.Type.NAMED(
                symbol.name,
                symbol
            );
        si        

        get_type(name: String, types: List[Type.BASE]) -> Semantic.Type.GENERIC is
            let symbol = get_class(name + '_' + types.Length);

            return new Semantic.Type.GENERIC(
                symbol.name,
                symbol,
                types
            );
        si
    si
si