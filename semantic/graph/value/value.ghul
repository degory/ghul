namespace Semantic.Graph.Value is
    use System;

    class BASE /* : Object, Semantic.Type.Typed */ is
        has_type: bool => false;

        type: Type.BASE is
            throw new NotImplementedException(Object.dump(self) + " has no type");
        si

        init() is si
    si

    class DUMMY: BASE, Type.Typed is
        has_type: bool => type != null;
        type: Type.BASE;

        init(type: Type.BASE) is
            super.init();

            self.type = type;
        si
    si

    namespace Load is
        class SELF: BASE, Type.Typed is
            type: Type.BASE;

            init(type: Type.BASE) is
                super.init();

                self.type = type;
            si
        si

        class LOCAL: BASE is
            init() is
                super.init();
            si
        si
        
        class SYMBOL: BASE, Type.Typed is
            symbol: Symbol.BASE;
            has_type: bool => symbol.type != null;
            type: Type.BASE => symbol.type;
            from: BASE;

            init(from: BASE, symbol: Symbol.BASE) is
                super.init();

                self.symbol = symbol;
            si

            toString() -> String is
                var symbol_type: Type.BASE;

                if symbol != null then
                    symbol_type = symbol.type;
                fi

                if isa Symbol.Variable(symbol) then
                    let variable_symbol = cast Symbol.Variable(symbol);
                    IO.Std.err.println("SYMBOL value is variable: " + variable_symbol + " with type " + variable_symbol.type);
                fi

                return "From " + from + " " + ClassName + ": " + symbol;
            si
        si
    si

    namespace Literal is
        class INTEGER: BASE, Type.Typed is
            string: String;
            type: Type.BASE;

            init(string: String, type: Type.BASE) is
                super.init();

                self.string = string;
                self.type = type;
            si
        si
    si
si
