namespace Ghul is
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`1")
    class FUNCTION_0[TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call() -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`2")
    class FUNCTION_1[T,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg: T) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg: T, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`3")
    class FUNCTION_2[T1,T2,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`4")
    class FUNCTION_3[T1,T2,T3,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`5")
    class FUNCTION_4[T1,T2,T3,T4,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`6")
    class FUNCTION_5[T1,T2,T3,T4,T5,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`7")
    class FUNCTION_6[T1,T2,T3,T4,T5,T6,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`8")
    class FUNCTION_7[T1,T2,T3,T4,T5,T6,T7,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`9")
    class FUNCTION_8[T1,T2,T3,T4,T5,T6,T7,T8,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`10")
    class FUNCTION_9[T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`11")
    class FUNCTION_10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Func`12")
    class FUNCTION_11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11) -> TResult;

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> TResult;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action")
    class ACTION_0: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        invoke();

        @IL.name("BeginInvoke")
        begin_invoke(callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`1")
    class ACTION_1[T]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(obj: T);

        @IL.name("BeginInvoke")
        begin_invoke(obj: T, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`2")
    class ACTION_2[T1,T2]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`3")
    class ACTION_3[T1,T2,T3]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`4")
    class ACTION_4[T1,T2,T3,T4]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`5")
    class ACTION_5[T1,T2,T3,T4,T5]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`6")
    class ACTION_6[T1,T2,T3,T4,T5,T6]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`7")
    class ACTION_7[T1,T2,T3,T4,T5,T6,T7]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`8")
    class ACTION_8[T1,T2,T3,T4,T5,T6,T7,T8]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`9")
    class ACTION_9[T1,T2,T3,T4,T5,T6,T7,T8,T9]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`10")
    class ACTION_10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`11")
    class ACTION_11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Action`12")
    class ACTION_12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        call(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11, arg12: T12);

        @IL.name("BeginInvoke")
        begin_invoke(arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, arg7: T7, arg8: T8, arg9: T9, arg10: T10, arg11: T11, arg12: T12, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult);

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("class [mscorlib]System.Predicate`1")
    class PREDICATE[T]: System.MulticastDelegate,System.Cloneable,System.Runtime.Serialization.ISerializable is
        @IL.name("Invoke")
        invoke(obj: T) -> bool;

        @IL.name("BeginInvoke")
        begin_invoke(obj: T, callback: System.AsyncCallback, object: System.Object) -> System.IAsyncResult;

        @IL.name("EndInvoke")
        end_invoke(result: System.IAsyncResult) -> bool;

        @IL.name("GetObjectData")
        get_object_data(info: System.Runtime.Serialization.SerializationInfo, context: System.Runtime.Serialization.StreamingContext);

        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("GetInvocationList")
        get_invocation_list() -> System.Delegate[];

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("Clone")
        clone() -> System.Object;

        @IL.name("DynamicInvoke")
        dynamic_invoke(args: System.Object[]) -> System.Object;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name(".ctor")
        init(object: System.Object, method: word);
        @IL.name.read("get_Target") 
        target: System.Object;

        @IL.name.read("get_Method") 
        method: System.Reflection.MethodInfo;

    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`1")
    struct TUPLE_1[T1]: System.Equatable[Ghul.TUPLE_1[T1]],System.Comparable[Ghul.TUPLE_1[T1]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_1[T1]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_1[T1]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1);
        @IL.name("Item1")
        _0: T1 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`2")
    struct TUPLE_2[T1,T2]: System.Equatable[Ghul.TUPLE_2[T1,T2]],System.Comparable[Ghul.TUPLE_2[T1,T2]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_2[T1,T2]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_2[T1,T2]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`3")
    struct TUPLE_3[T1,T2,T3]: System.Equatable[Ghul.TUPLE_3[T1,T2,T3]],System.Comparable[Ghul.TUPLE_3[T1,T2,T3]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_3[T1,T2,T3]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_3[T1,T2,T3]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`4")
    struct TUPLE_4[T1,T2,T3,T4]: System.Equatable[Ghul.TUPLE_4[T1,T2,T3,T4]],System.Comparable[Ghul.TUPLE_4[T1,T2,T3,T4]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_4[T1,T2,T3,T4]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_4[T1,T2,T3,T4]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3, item4: T4);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
        @IL.name("Item4")
        _3: T4 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`5")
    struct TUPLE_5[T1,T2,T3,T4,T5]: System.Equatable[Ghul.TUPLE_5[T1,T2,T3,T4,T5]],System.Comparable[Ghul.TUPLE_5[T1,T2,T3,T4,T5]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_5[T1,T2,T3,T4,T5]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_5[T1,T2,T3,T4,T5]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3, item4: T4, item5: T5);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
        @IL.name("Item4")
        _3: T4 public;
        @IL.name("Item5")
        _4: T5 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`6")
    struct TUPLE_6[T1,T2,T3,T4,T5,T6]: System.Equatable[Ghul.TUPLE_6[T1,T2,T3,T4,T5,T6]],System.Comparable[Ghul.TUPLE_6[T1,T2,T3,T4,T5,T6]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_6[T1,T2,T3,T4,T5,T6]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_6[T1,T2,T3,T4,T5,T6]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3, item4: T4, item5: T5, item6: T6);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
        @IL.name("Item4")
        _3: T4 public;
        @IL.name("Item5")
        _4: T5 public;
        @IL.name("Item6")
        _5: T6 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`7")
    struct TUPLE_7[T1,T2,T3,T4,T5,T6,T7]: System.Equatable[Ghul.TUPLE_7[T1,T2,T3,T4,T5,T6,T7]],System.Comparable[Ghul.TUPLE_7[T1,T2,T3,T4,T5,T6,T7]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_7[T1,T2,T3,T4,T5,T6,T7]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_7[T1,T2,T3,T4,T5,T6,T7]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3, item4: T4, item5: T5, item6: T6, item7: T7);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
        @IL.name("Item4")
        _3: T4 public;
        @IL.name("Item5")
        _4: T5 public;
        @IL.name("Item6")
        _5: T6 public;
        @IL.name("Item7")
        _6: T7 public;
    si
    @IL.stub()
    @IL.name("valuetype [mscorlib]System.ValueTuple`8")
    struct TUPLE_8[T1,T2,T3,T4,T5,T6,T7,TRest]: System.Equatable[Ghul.TUPLE_8[T1,T2,T3,T4,T5,T6,T7,TRest]],System.Comparable[Ghul.TUPLE_8[T1,T2,T3,T4,T5,T6,T7,TRest]],System.IValueTupleInternal,System.Runtime.CompilerServices.ITuple is
        @IL.name("Equals")
        equals(obj: System.Object) -> bool;

        @IL.name("Equals")
        equals(other: Ghul.TUPLE_8[T1,T2,T3,T4,T5,T6,T7,TRest]) -> bool;

        @IL.name("CompareTo")
        compare_to(other: Ghul.TUPLE_8[T1,T2,T3,T4,T5,T6,T7,TRest]) -> int;

        @IL.name("GetHashCode")
        get_hash_code() -> int;

        @IL.name("ToString")
        to_string() -> System.String;

        @IL.name("GetType")
        get_type() -> System.Type2;

        @IL.name(".ctor")
        init(item1: T1, item2: T2, item3: T3, item4: T4, item5: T5, item6: T6, item7: T7, rest: TRest);
        @IL.name("Item1")
        _0: T1 public;
        @IL.name("Item2")
        _1: T2 public;
        @IL.name("Item3")
        _2: T3 public;
        @IL.name("Item4")
        _3: T4 public;
        @IL.name("Item5")
        _4: T5 public;
        @IL.name("Item6")
        _5: T6 public;
        @IL.name("Item7")
        _6: T7 public;
        @IL.name("Rest")
        _rest: TRest public;
    si
si
