{
    "version": "2.0.0",
    "options": {
        "env": {
            "PACKAGE_VERSION": "${config:version}",
            "TAG_VERSION": "v${config:version}",
            "LC_ALL": "C"
        },    
    },
    "tasks": [
        {
            "label": "Set version number",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "setversion",                
                "${config:version}",
                "Directory.Build.props"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Build",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "build",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "group": "build",
            "dependsOn": "Set version number",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": [
                "$ghūl",
                "$msCompile"
            ]
        },
        {
            "label": "Pack",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "pack",
                "/property:Version=${config:version}",
                "/property:ReleaseOption=\"--define release\"",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": [
                "$ghūl",
                "$msCompile"
            ]
        },
        {
            "label": "Clean",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "clean"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Bootstrap",
            "type": "shell",
            "command": "./build/bootstrap.sh",
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$ghūl"
        },
        {
            "label": "Build development container",
            "type": "shell",
            "command": "docker",
            "args": [
                "build",
                "--no-cache",
                ".",
                "-f",
                "devcontainer-dotnet.dockerfile",
                "-t",
                "ghul/devcontainer:${config:version}"
            ],
            "presentation": {
                "reveal": "silent"
            },
            "dependsOn": [
                "Pack"
            ],
            "problemMatcher": []
        },
        {
            "label": "Install latest public version",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "tool",
                "update",
                "--local",
                "ghul.compiler"
            ],
            "dependsOn": [
                "Uninstall"
            ],
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Install development version",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "tool",
                "update",
                "--local",
                "ghul.compiler",
                "--add-source",
                "./nupkg/",
                "--version",
                "${config:version}"
            ],
            "dependsOn": [
                "Pack"
            ],
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Uninstall",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "tool",
                "uninstall",
                "--local",
                "ghul.compiler"
            ],
            "presentation": {
                "reveal": "never"
            },
            "problemMatcher": [],
            "linux": {
                "command": "build/uninstall.sh",
            }
            // TODO: Windows equivalent of uninstall.sh, which should silently succeed even if tool is not present 
        },
        {
            "label": "Add Git hooks",
            "type": "shell",
            "command": ".git-hooks/install",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Run all integration tests",
            "type": "shell",
            "command": "dotnet ghul-test integration-tests",
            "group": "test",
            "dependsOn": [
                "Install development version"
            ]
        },
        {
            "label": "Run failed integration tests",
            "type": "shell",
            "command": "./integration-tests/run-failed.sh",
            "group": "test",
            "dependsOn": [
                "Install development version"
            ]
        },
        {
            "label": "Create new test",
            "type": "shell",
            "command": "./integration-tests/create.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Edit all failed tests",
            "type": "shell",
            "command": "./integration-tests/edit-failed.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        }
    ]
}