namespace Test is
    use IO.Std;

    class Main is
        instance_1: int;

        init() is
        si

        entry() static is
            @IL.entrypoint()
            
            for i in new Main().test() do
                let result = i("hello");

                Std.out.write_line("inner result: " + result);
            od            
        si
        
        test() -> Collections.Iterable[(string) -> int] is
            let capture_1 = 444;

            let inners = new Collections.LIST[(string) -> int]();

            for capture in 0..5 do
                let outer = () is
                    Std.out.write_line("created outer: capture is: " + capture);
    
                    let inner = (j: string) is
                        Std.out.write_line("in inner: " + j + " instance is: " + instance_1 + " capture is: " + capture + " capture_1 is: " + capture_1);

                        instance_1 = instance_1 + 1;
                        
                        return instance_1 + capture_1;
                    si;
    
                    Std.out.write_line("creating inner: " + instance_1 + " " + capture_1);
    
                    return inner;
                si;
    
                inners.add(outer());
            od

            // expect warning:
            capture_1 = 555;

            return inners;
        si
    si
si