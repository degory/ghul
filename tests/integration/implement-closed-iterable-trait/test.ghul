namespace Test is
    @IF.not.v3()
    use Std = System.Console;
    @IF.not.v3()
    use object = System.Object;
    @IF.not.v3()
    use string = System.String;

    @IF.v3()
    use Std = IO.Std;

        
    use Collections.Iterable;
    use Collections.Iterator;

    class Main is
        entry() static is
            @IL.entrypoint()

            for i in new INT_REFLECTOR_CLASS([1, 2, 3, 4, 5].iterator) do
                Std.out.write_line("have integer: " + i);
            od

            for i in new INT_REFLECTOR_STRUCT([1, 2, 3, 4, 5].iterator) do
                Std.out.write_line("have integer: " + i);
            od

            for i in new STRING_REFLECTOR(["one", "two", "three", "four", "five"].iterator) do
                Std.out.write_line("have string: " + i);
            od
        si
    si
    
    class INT_REFLECTOR_CLASS: Iterable[int] is
        _iterator: Iterator[int];

        init(iterator: Iterator[int]) is
            _iterator = iterator;
        si

        @IL.name.read("GetEnumerator")
        iterator: Iterator[int] => _iterator;
    si

    struct INT_REFLECTOR_STRUCT: Iterable[int] is
        _iterator: Iterator[int];

        init(iterator: Iterator[int]) is
            _iterator = iterator;
        si

        @IL.name.read("GetEnumerator")
        iterator: Iterator[int] => _iterator;
    si


    class STRING_REFLECTOR: Iterable[string] is
        _iterator: Iterator[string];

        init(iterator: Iterator[string]) is
            _iterator = iterator;
        si

        @IL.name.read("GetEnumerator")
        iterator: Iterator[string] => _iterator;
    si
si