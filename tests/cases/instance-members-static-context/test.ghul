namespace Test is
    g() -> System.Object is
        return self;
    si

    t: int;

    u: int => t, = v is t = v; si

    w: int => u;

    x: int is
        g();

        return 1;
    si
    
    get_r() -> int is
        g();

        return 1;
    si

    get_s() -> int => get_r();        
    
    class Main is
        entry() static is
            @IL.entrypoint()

            f(); // error: implied self in static context
            self.f(); // error: explicit self in static context

            p = 123; // error: implied self in static context
            self.p = 456; // error: explicit self in static context

            let pp = p; // error: implied self in static context
            pp = self.p; // error: explicit self in static context

            q = 123; // error: implied self in static context
            self.q = 456; // error: explicit self in static context

            let qq = q; // error: implied self in static context
            qq = self.q; // error: explicit self in static context

            self[123] = 456; // error: explicit self in static context
            qq = self[123]; // error: explicit self in static context

            let t = new Main();

            t.f(); // OK: explicit instance 
            t.p = 123; // OK: explicit instance
            pp = t.p; // OK: explicit instance

            t[123] = 456; // OK: explicit instance
            pp = t[123]; // OK: explicit instance

            return;
        si

        instance() is
            f(); // OK: implied self in instance context
            self.f(); // OK: explicit self in instance context

            p = 123; // OK: implied self in instance context
            self.p = 456; // OK: explicit self in instance context

            let pp = p; // OK: implied self in instance context
            pp = self.p; // OK: explicit self in instance context

            q = 123; // OK: implied self in instance context
            self.q = 456; // OK: explicit self in instance context

            let qq = q; // OK: implied self in instance context
            qq = self.q; // OK: explicit self in instance context

            self[123] = 456; // OK: explicit self in instance context
            pp = self[123]; // OK: explicit self in instance context

            let t = new Main();

            t.f(); // OK: explicit instance 
            t.p = 123; // OK: explicit instance
            pp = t.p; // OK: explicit instance

            t[123] = 456; // OK: explicit instance
            pp = t[123]; // OK: explicit instance            
        si
        
        f() is si

        p: int;

        q: int => p, = v is p = v; si

        r: int => p;

        s: int is
            f();

            return 1;
        si
        
        get_p() -> int is
            f();

            return 1;
        si

        get_q() -> int => get_p();        

        [i: int]: int => p, = v is p = v; si
    si
si