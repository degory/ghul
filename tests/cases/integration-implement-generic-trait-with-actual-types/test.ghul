namespace Test is
    use System.String;
    use System.Console;

    class Main is
        entry() static is
            @IL.entrypoint()

            let isd: DoStuff[int];
            
            isd = new INT_STUFF_DOER_CLASS();
            isd.do_stuff(12345);
            Console.write_line("have value: " + isd.get_value());

            isd = new INT_STUFF_DOER_STRUCT();
            isd.do_stuff(54321);
            Console.write_line("have value: " + isd.get_value());

            let ssd: DoStuff[String];
            
            ssd = new STRING_STUFF_DOER_CLASS();
            ssd.do_stuff("one two three four five");
            Console.write_line("have value: " + ssd.get_value());

            ssd = new STRING_STUFF_DOER_STRUCT();
            ssd.do_stuff("five four three two one");
            Console.write_line("have value: " + ssd.get_value());
        si
    si

    class INT_STUFF_DOER_CLASS: DoStuff[int] is
        _value: int;

        init() is            
        si
        
        do_stuff(value: int) is
            _value = value;
        si

        get_value() -> int => _value;
    si

    struct INT_STUFF_DOER_STRUCT: DoStuff[int] is
        _value: int;

        init() is            
        si
        
        do_stuff(value: int) is
            _value = value;
        si

        get_value() -> int => _value;
    si

    class STRING_STUFF_DOER_CLASS: DoStuff[String] is
        _value: String;

        init() is            
        si
        
        do_stuff(value: String) is
            _value = value;
        si

        get_value() -> String => _value;
    si

    struct STRING_STUFF_DOER_STRUCT: DoStuff[String] is
        _value: String;

        init() is            
        si
        
        do_stuff(value: String) is
            _value = value;
        si

        get_value() -> String => _value;
    si

    
    trait DoStuff[T] is
        do_stuff(value: T);
        
        get_value() -> T;
    si
si