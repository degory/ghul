namespace Test is
    use System;

    @IF.dotnet()
    class Main is
        entry() static is
            @IL.entrypoint()

            let test = new Test("Hello world");

            test.test();
        si
    si

    class Test is
        @IF.dotnet()
        message: String;

        @IF.legacy()
        count: int;

        @IF.dotnet()
        init(message: String) is
            self.message = message;
        si

        @IF.legacy()
        init(count: int) is
            self.count = count;           
        si
        
        test() is
            @IF.dotnet()
            System.Console.write_line(message);

            @IF.debug()
            System.Console.write_line("not expected: debug flag is not enabled");

            @IF.legacy()
            IO.Std.err.println("count is: " + count);
        si
    si

    @IF.legacy()
    class Broken is
        blah: DoesNotExist;

        test() is
            doSomethingDaft(bibble, bobble, blergh);
        si        
    si
    
si

namespace Ghul is
    @IF.legacy()
    class int is
        wibble: String;
    si    
si

@IF.legacy()
namespace System is
    class String is
        totally_broken: int;
    si

    class Exception is
        also_broken: int;
    si  
si

@IF.debug()
namespace System is
    class String is
        totally_broken: int;
    si

    class Exception is
        also_broken: int;
    si    
si
