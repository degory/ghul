namespace Test is
    class Main is
        entry() static is
            @IL.entrypoint()

            let a = new A();
            let b = new B();
            let c = new C();

            let i: I = new X();
            let j: I = new Y();

            if a == b then // should warn comparison result is constant false
                System.Console.write_line("not expected: a == b");
            else
                System.Console.write_line("expected: a != b");                
            fi

            if a != b then // should warn comparison result is constant true
                System.Console.write_line("expected: a != b");
            else
                System.Console.write_line("not expected: a == b");                
            fi

            if b == c then
                System.Console.write_line("not expected: b == c");
            else
                System.Console.write_line("expected: b != c");                
            fi

            if b != c then
                System.Console.write_line("expected: b != c");
            else
                System.Console.write_line("not expected: b == c");                
            fi
            
            if i == j then
                System.Console.write_line("not expected: i == j");
            else
                System.Console.write_line("expected: i != j");                
            fi

            if i != j then
                System.Console.write_line("expected: i != j");
            else
                System.Console.write_line("not expected: i == j");                
            fi

            let aa = a;
            let bb = b;
            let cc: B = c;
            let ii = i;

            if aa == a then
                System.Console.write_line("expected: aa == a");
            else
                System.Console.write_line("not expected: aa != a");                
            fi

            if aa != a then
                System.Console.write_line("not expected: aa != a");
            else
                System.Console.write_line("expected: aa == a");                
            fi

            if bb == b then
                System.Console.write_line("expected: bb == b");
            else
                System.Console.write_line("not expected: bb != b");                
            fi

            if bb != b then
                System.Console.write_line("not expected: bb != b");
            else
                System.Console.write_line("expected: bb == b");                
            fi

            if cc == c then
                System.Console.write_line("expected: cc == c");
            else
                System.Console.write_line("not expected: cc  c");                
            fi

            if cc != c then
                System.Console.write_line("not expected: cc != c");
            else
                System.Console.write_line("expected: cc == c");                
            fi

            if ii == i then
                System.Console.write_line("expected: ii == i");
            else
                System.Console.write_line("not expected: ii != i");                
            fi

            if ii != i then
                System.Console.write_line("not expected: ii != i");
            else
                System.Console.write_line("expected: ii == i");
            fi
        si
    si

    class A is
        init() is si

        do_a() is
            System.Console.write_line("do A");
        si
    si

    class B is
        init() is si

        do_b() is
            System.Console.write_line("do B");
        si
    si
    
    class C: B is
        init() is si

        do_c() is
            System.Console.write_line("do C");
        si
    si    

    trait I is
        do_i() -> int;        
    si
    
    class X: I is
        init() is si

        do_i() -> int => 111;        
    si
    
    class Y: I is
        init() is si

        do_i() -> int => 222;
    si
si