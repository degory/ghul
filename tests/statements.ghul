namespace Test.Statements is
    class STATEMENTS is
        if_statements() is
            if condition then
                let a = b + c;
            else
                let d = e / f;
            fi

            if condition[i] then
                x = x * 2;
            fi

            if condition.i then
                a = (b, c, d);
            elif condition(i) then 
                a = x(y, z);
            fi

            if condition then
                c = [r, s, t, u][0](x, y, z);
            elif condition then
                c = [r, s].elements;
            elif condition then
                c = [[a, b], [c(), d()]][i..j];
            else
                c = (a = none, b = none, c = none).a;
            fi
        si

        case_statements() is
            case a + b / c
            when a / b:
                IO.Std.err.println("is 1");

            when b / c:
                IO.Std.err.println("is 2");

            when x(a, b, c).p[q]:
                IO.Std.err.println("is expression");

            when ((a: int, b:int) => 5)(1, 2):

            default
                IO.Std.err.println("is other");

            esac
        si

        do_statements() is
            while condition do
                a = b + c;

                d = e + f;
            od

            do
                forever();
                and();
                ever();
            od

            label: while condition do
                i = i + 1;
            od

            label: do
                j = j - 1;
            od

            label: while condition do
                i = i + 1;
                if world.is_ended then break label; fi

                continue;
            od

            label: do
                j = j - 1;
                if not_apocalypse then continue label; fi

                break;
            od        
        si

        for_statements() is
            for i in 0..9 do
                IO.Std.err.println("Hello range %" % i);
            od

            for j in [a, b, c, d, e] do
                IO.Std.err.println("Hello list %" % j);
            od

            for k in (x, y, z) do
                IO.Std.err.println("Does this make sense %?" % k);
            od
        si
    si
si