namespace Test.GenericInheritance is
    use Collections;

    class Thing[T] is
        stuff_thing: Thing[T] => null;
        stuff_t: T => null;
        stuff_list: List[T] => null;
        stuff_iterable: Iterable[T] => null;

        [index: Thing[T]]: Iterable[T] => null;

        init() is si

        read_thing() -> Thing[T] => null;
        read_t() -> T => null;
        read_list() -> List[T] => null;

        write_thing(t: Thing[T]);
        write_t(t: T);
        write_list(l: List[T]);
    si

    class WithParamOverrideMethod[U]: Thing[U] is
        write_thing(t: Thing[U]) is si        
        write_thing(i: int) is si

        write_int(i: int) is si        
    si

    class WithParamOverrideMethodTest is
        test() is
            var t: WithParamOverrideMethod[char];

            t.write_thing(1234);
            t.write_t(cast char(0));

            t.write_int(1234);

            t.write_thing(new Thing[char]());
        si
    si
si