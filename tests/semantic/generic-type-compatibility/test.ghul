namespace Test.GenericTypeCompatibility is
    use System; 
    use Collections;

    class Thing[T] is
        stuff_thing: Thing[T] => null;
        stuff_t: T => null;
        stuff_list: List[T] => null;
        stuff_iterable: Iterable[T] => null;

        [index: Thing[T]]: Iterable[T] => null;

        read_thing() -> Thing[T] => null;
        read_t() -> T => null;
        read_list() -> List[T] => null;

        write_thing(t: Thing[T]); 
        write_t(t: T);
        write_list(l: List[T]);
    si

    class Test is
        do_something(list: List[Thing[int]]) -> Iterable[Thing[int]];
        do_something(list: List[Thing[char]]) -> Iterable[Thing[char]];

        check_int(i: int);
        check_char(c: char);

        test() is
            let vector_thing_int = new LIST[Thing[int]]();

            let iteratable_thing_int = do_something(vector_thing_int);
            let iterator_thing_int = iteratable_thing_int.iterator;
            let thing_int = iterator_thing_int.current;

            check_int(thing_int.read_t());

            let vector_thing_char = new LIST[Thing[char]]();

            let iteratable_thing_char = do_something(vector_thing_char);
            let iterator_thing_char = iteratable_thing_char.iterator;
            let thing_char = iterator_thing_char.current;
            
            check_char(thing_char.read_t());
        si
    si
si