namespace Test is
    class Main is
        entry() static is
            @IL.entrypoint()

            // let cs: C[System.String];
            // let d: D;

            // cs.test()

            let c: CCCC[int];
            let d: DDDD;

            let x: XXXX[int];
            let y: YYYY[System.String];

            x.test(1234);

            c.test(1234);
            
            d.test(1234);
            d.test("hello");

            let i: I = d;

            i.test(1234);

            let v = d.test_value;

            let u: CCCC.U;

            // y.test()

            return;
        si
    si

    trait I is
        test(i_i: int);      
        
        test(j: int);
    si

    trait G[T] is
        test(g_t: T);
    si

    trait P is
        test_value: int;
    si    

    class CCCC[U]: G[U] is
        init() is si

        test_value: U => null;

        test(cccc_u: U) is
            System.Console.write_line("test U: " + cccc_u);
        si

        test(cccc_i1: int) is
            System.Console.write_line("test int: " + cccc_i1);
        si
    si

    class DDDD: CCCC[System.String], P is
        init() is
        si
        
        test(c: char) is si
    si

    class XXXX[T] is
        test(t: T);
    si   

    class YYYY[U]: XXXX[U] is
        test(u: U);
    si    
si