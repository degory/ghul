entry() is
    // OK
    expect_func_int_string_string((a, b) => b + a);

    // expect error - if a and b are correctly inferred this will look for and fail to find operator +(int, string)
    expect_func_int_string_string((a, b) => a + b); 

    // OK
    let expect_int_string: (int, string) = expect_func_T_U(123, i => "x" + i);

    // OK
    let expect_string_int: (string, int) = expect_func_T_U("hello", s => s.length);

    // expect error: argument type should be inferred, but function expression body attempts to call non-existant operator overload:
    expect_func_T_U("hello", s => 1 + s);

    // expect error: insufficient information to infer argument type:
    expect_func_T_U(null, s => s + 1);

    // expect error: insufficient information to infer argument type:
    expect_func_T_U(null, null);

    return;
si

expect_func_int_string_string(f: (int, string) -> string);

expect_func_T_U[T,U](t: T, f: T -> U) -> (T, U);
