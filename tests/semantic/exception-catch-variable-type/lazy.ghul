namespace Generic is
    @IF.not.v3()
    use Std = System.Console;
    @IF.not.v3()
    use object = System.Object;
    @IF.not.v3()
    use string = System.String;
    @IF.not.v3()
    use NullPointerException = System.NullPointerException;

    @IF.v3()
    use Std = IO.Std;

    @IF.v3()
    use NullPointerException = System.NullReferenceException;

    use Exception = System.Exception;
    
    class Lazy[T] is
        _value: T;
        _has_value: bool;
        _create: () -> T;
        _exception: Exception;

        init(create: () -> T) is
            self._create = create;
        si

        value: T is
            if _has_value then
                return _value;
            elif _exception? then
                throw _exception;
            else
                try
                    if _create == null then
                        throw new NullPointerException("cannot create " + self + " from null create proc");
                    fi
                    _value = _create();
                    _has_value = true;
                catch e: Exception
                    _exception = e;
                    throw e;
                yrt
                return value;
            fi
        si

    si

si
