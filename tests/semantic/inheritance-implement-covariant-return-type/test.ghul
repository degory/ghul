namespace Test is
    @IF.not.v3()
    use Std = System.Console;
    @IF.not.v3()
    use object = System.Object;
    @IF.not.v3()
    use string = System.String;

    @IF.v3()
    use Std = IO.Std;

    class Main is
        entry() static is
            @IL.entrypoint()

            let a: Abstract = new CONCRETE();

            let b = a.copy();
        si
    si

    trait Abstract is
        copy() -> Abstract;
    si

    class CONCRETE: Abstract is
        init() is si

        // #460 Should error if return type in implemented method is not covariant
        copy() -> CONCRETE is
            Std.out.write_line("will copy CONCRETE");

            let x = 100;

            return cast CONCRETE(self.memberwise_clone());
        si
    si
si

