namespace Test.TypedSequence is
    use System;
    use Generic;

    interface I is
        getdescription() -> String;
    si

    class C: System.Object, I is
        v: int;

        description: String =>
            "A " + ClassName + " value: " + v;

        init(v: int) is
            self.v = v;
        si

        toString() -> String => "" + v;        
    si

    class D: System.Object, I is
        v: int;

        description: String =>
            "A " + ClassName + " value: " + v;

        init(v: int) is
            self.v = v;
        si

        toString() -> String => "" + v;        
    si

    class Main is
        init() is
            var l: List[I];

            l = [new C(1), new D(2)]: I;

            for i in l do
                IO.Std.err.println(i.description);
            od

            var m: Iterable[Object] = [new C(1), new D(2), 3, 4, 5];

            IO.Std.err.println(m);
        si 
    si
si