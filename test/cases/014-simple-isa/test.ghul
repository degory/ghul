namespace Test.SimpleOperators is

    class A is
        value: int;

        init(v: int) is
            self.value = v;
        si
    si

    class BA: A is
        init(v: int) is
            super.init(v);
        si
    si

    class CA: A is
        init(v: int) is
            super.init(v);
        si
    si

    class DB: BA is
        walue: int;

        init(v:int, w: int) is
            super.init(v);
            walue = w;
        si
    si

    class Main is
        init() is
            let a = new A(111);
            let ba = new BA(222);
            let ca = new CA(333);
            let db = new DB(444, 555);

            if isa A(ba) then
                IO.Std.err.println("expected ba is an A");
            else
                IO.Std.err.println("not expected ba is not an A");
            fi

            if isa A(ca) then
                IO.Std.err.println("expected ca is an A");
            else
                IO.Std.err.println("not expected ca is not an A");
            fi

            if isa A(db) then
                IO.Std.err.println("expected db is an A");
            else
                IO.Std.err.println("not expected db is not an A");
            fi

            if isa BA(a) then
                IO.Std.err.println("not expected a is a BA");
            else
                IO.Std.err.println("expected ba is not an A");
            fi

            if isa CA(a) then
                IO.Std.err.println("not expected a is a CA");
            else
                IO.Std.err.println("expected a is not a CA");
            fi

            if isa DB(a) then
                IO.Std.err.println("not expected a is a DB");
            else
                IO.Std.err.println("expected a is not an DB");
            fi
        si
    si
si