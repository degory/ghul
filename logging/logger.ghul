namespace Logging is
    use System;
    use Generic;
    use Source;
    class LOGGER  is
        enable_trace: bool public static;
        trace_channels: Set[String];
        error_count: int;
        writer: IO.Writer;
        any_errors: bool is
            return error_count > 0;
        si

        init() -> void is
            super.init();
            trace_channels = new Set[String]();
            self.writer = IO.Std.err;
        si

        _trace(channel: String, message: String) -> void is
            if enable_trace && trace_channels.contains(channel) then
                writer.write(
                "trace: " + channel + ": " + message + "\n");
            fi
        si

        trace(channel: String, message: String) -> void static is
            if enable_trace then
                IoC.CONTAINER.instance.logger._trace(channel, message);
            fi
        si

        write(location: LOCATION, severity: String, message: String) -> void is
            writer.write(
                "%: %,%..%,%: %: %\n" % [
                    location.file_name, 
                    location.start_line, 
                    location.start_column, 
                    location.end_line, 
                    location.end_column+1, 
                    severity, 
                    message
                ]: Object 
            );
        si

        fatal(location: LOCATION, message: String) -> void is
            write(location, "error", message);
            throw new Exception("fatal error");
        si

        error(location: LOCATION, message: String) -> void is
            write(location, "error", message);
            error_count = error_count + 1;
            if error_count >= 100 then
                throw new Exception("too many errors");
            fi
        si

        warn(location: LOCATION, message: String) -> void is
            write(location, "warn", message);
        si

        info(location: LOCATION, message: String) -> void is
            write(location, "info", message);
        si

    si

si
