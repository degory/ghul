namespace Test is
    use IO.Std;

    class Main is
        instance_1: int;

        init() is
        si

        entry() static is
            Main().test();
        si
        
        test() is

            instance_1 = 500;

            let outer_1 = (o: int) is
                let inner = (i: int) => instance_1 + o + i;

                o = o + 1; // expect error - cannot assign to captured argument

                return inner;
            si;

            let outer_2 = (o: int) is
                let p = o;

                let inner = (i: int) is p = p + o; return o + i si; // expect error - cannot assign to captured local

                o = o + 1; // expect error - cannot assign to captured argument

                p = p + 1; // expect error - cannot assign to captured local

                return inner;
            si;

            let inner_1 = outer_1(50);
            let inner_2 = outer_2(50);

            for i in 1::5 do
                // note that outer function's o is captured by the inner function, but by value only
                // so repeated calls to inner all see the same value of o (i.e. 50):
                Std.out.write_line("inner_1: " + inner_1(i));
                Std.out.write_line("inner_2: " + inner_2(i));
            od
        si
    si
si