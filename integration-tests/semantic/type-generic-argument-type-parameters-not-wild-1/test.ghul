use Std = IO.Std;

class Main[T, U, X, Y] is
    entry() static is
        let fail_1 = function(123, "hello");
        let fail_2 = function([123,456], ["aaa", "bbb"]);

        let t: T;
        let u: U;

        // expect success:
        (t, u) = function(t, u);

        let x: X;
        let y: Y;

        // expect fail:
        (x, y) = function(t, u);

        // expect fail:
        (t, u) = function(x, y);
    si

    function(t: T, u: U) -> (t: T,u: U) static is
        let i: int;
        let j: string;

        let x: X;
        let y: Y;

        i = t; // expect error T is not an int
        j = u; // expect error U is not a string

        t.to_string();
        x.to_string();

        i = x; // expect error X is not an int
        j = y; // expect error Y is not a string

        t = object(); // expect error object is not a T
        u = object(); // expect error object is not a U

        x = object(); // expect error object is not a X
        y = object(); // expect error object is not a Y

        i = object(); // expect error object is not an int
        j = object(); // expect error object is not a string

        t = 10; // expect error int is not a T
        y = "hello"; // expect error string is not a Y

        let o: object;
        let p: object;

        o = x; // OK X is an object
        p = y; // OK Y is an object

        o = t; // OK T is an object
        p = u; // OK U is an object
        
        let w: T = o; // expect error object is not a T
        let z: U = p; // expect error object is not a U
    si
si
