namespace TestFunctionArgumentsMissingExplicitType is
    use System; 
    use Collections;

    class Test is
        no_types_either(blah_a,blah_b) is
            // inside the function the arguments should have error type
            // (compatible with all types) and be assignable to/from
            // any other type

            let a: int = blah_a; // expect success
            let b: string = blah_b; // expect success
        si

        no_type_first(blah_a, blah_b: int) is
            // but where the type is specified for one argument
            // and not the other, the argument with a type
            // should still have a defined type

            let a: int = blah_a; // expect success
            let b: string = blah_b; // expect error
        si  

        no_type_second(blah_a: int, blah_b) is
            // but where the type is specified for one argument
            // and not the other, the argument with a type
            // should still have a defined type

            let a: string = blah_a; // expect error
            let b: int = blah_b; // expect success
        si

        test() is
            // where a formal argument is missing a type
            // it should have error type (compatible with all types)

            no_types_either(1, 2); // expect success
            no_types_either("a", "b"); // expect success

            no_type_first(1, 2); // expect success
            no_type_first("a", 2); // expect success

            no_type_second(1, 2); // expect success
            no_type_second(1, "b"); // expect success

            // but where the type is specified for one argument
            // and not the other, the argument with a type
            // should still have a defined type

            no_type_first(1, "a"); // expect error
            no_type_second("a", 1); // expect error
        si
    si
si
