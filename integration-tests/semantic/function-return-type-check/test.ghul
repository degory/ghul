namespace Test is
    @IF.not.v3()
    use Std = System.Console;
    @IF.not.v3()
    use object = System.Object;
    @IF.not.v3()
    use string = System.String;

    @IF.v3()
    use Std = IO.Std;

    class Main is
        entry() static is
            

            return;
        si

        test_int_1() -> int static is
            return 1234; // OK - correct type

            return "Hello"; // Error: string not assignable to return type int

            return; // Warning: no return expression means default value for int will be returned
        si

        test_int_2() -> int => 1234; // OK - correct type

        test_int_3() -> int => "Hello"; // Error: string not assignable to int

        test_void_1() is
            return 1234; // Error: any value returned from void function is incorrect

            return; // OK - no value expected
        si

        test_void_2() => 12345; // Eventually would like an omitted return type to be inferred, but it's void for now

        test_object_1() -> object is
            return 1234; // OK - int 1234 is assignable to object

            return "Hello"; // OK - string "Hello" is assignable to object
        si
    si
si