namespace Test.ReturnExpression is

    // these are all valid return expression initial tokens
    /*
        Lexical.TOKEN.IDENTIFIER,
        Lexical.TOKEN.SQUARE_OPEN,
        Lexical.TOKEN.PAREN_OPEN,
        Lexical.TOKEN.NEW,
        Lexical.TOKEN.CAST,
        Lexical.TOKEN.ISA,
        Lexical.TOKEN.TYPEOF,
        Lexical.TOKEN.INT_LITERAL,
        Lexical.TOKEN.FLOAT_LITERAL,
        Lexical.TOKEN.STRING_LITERAL,
        Lexical.TOKEN.CHAR_LITERAL,
        Lexical.TOKEN.TRUE,
        Lexical.TOKEN.FALSE,
        Lexical.TOKEN.NULL,
        Lexical.TOKEN.SELF,
        Lexical.TOKEN.SUPER,
        Lexical.TOKEN.IF,
        Lexical.TOKEN.OPERATOR
    */

    blah: int;

    test_identifier() -> int is
        return blah
    si

    test_square_open() -> int[] is
        return [1, 2, 3]
    si

    test_paren_open() -> int is
        return (1 + 2)
    si

    test_new() -> object is
        return new object()
    si

    test_cast() -> int is
        return cast int(1.0)
    si

    test_isa() -> bool is
        return isa int(1.0)
    si

    test_typeof() -> System.Type2 is
        return typeof int
    si

    test_int_literal() -> int is
        return 1
    si

    test_float_literal() -> single is
        return 1.0
    si

    test_string_literal() -> string is
        return "hello"
    si

    test_char_literal() -> char is
        return 'a'
    si

    test_true() -> bool is
        return true
    si

    test_false() -> bool is
        return false
    si

    test_null() -> object is
        return null
    si

    class Test is
        test_self() -> object is
            return self
        si            
    si
    
    class Test2 is
        test_super() -> object is
            return super
        si
    si

    test_if() -> int is
        return 
            if true then
                1
            else
                2
            fi
    si

    test_operator_1() -> bool is
        return !true
    si

    test_operator_2() -> int is
        return -1234
    si

    test_fail() is
        return return // have at least one failure so we know the test compiled at all
    si
si