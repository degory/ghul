namespace Test.IncompleteFunction is
    class Test is
        count: int;

        f(i: int) -> int is
            return 0
        si

        g(i:int) -> int is
            count = count - 1;
            return 0;

            h(i: int) -> Test is
                // let x = if count > 0 then
                //     "count is {count}"
                // else
                //     "count is 0"
                // fi;

                if count > 0 then
                    return null
                else
                    return null
                fi
            si

        si
        
        i(i: int) -> Test is
            let x = if count > 0 then
                "count is {count}"
            else
                "count is 0"
            fi;

            if count > 0 then
                return null
            else
                return null
            fi
        si

        j(i: int) -> int is
            return count
        si
    si
si