namespace Test is
    use Std = IO.Std;

    class Main is
        function[T](t: T) -> T static;
        function[T]() -> T static;
    si

si

namespace Other is
    entry() static is
        // this should parse, although it's not sematically valid because
        // 1) Main` is an undefined symbol
        // 2) ` and [ separated by whitespace is not the same as the `[ token,
        // and so we're attempting to call an indexer with the type 'int' as the paramter

        let b: int = Test.Main.function` [int]();
        let c: (int, int) = Test.Main.function` [(int, int)]((1, 2));

        return;
    si
si
