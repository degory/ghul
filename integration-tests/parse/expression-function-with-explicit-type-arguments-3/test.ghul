namespace Test is
    use Std = IO.Std;

    class Main is
        function[T](t: T) -> T static;
        function[T]() -> T static;
    si

    entry() static is
        // syntax error
        let a: int = Main.function` [](123);

        // this should parse, although it's not sematically valid because
        // 1) Main.function` is an undefined symbol
        // 2) ` and [ separated by whitespace is not the same as the `[ token,
        // and so we're attempting to call an indexer with the type 'int' as the paramter        
        let b: int = Main.function` [int]();

        // FIXME: this is syntactically valid, but results in parse errors
        // when placed here after the previous let statement
        // let c: (int, int) = Main.function` [(int, int)]((1, 2));

        let d: string = "hello";
    si
    
    other() static is
        // syntactically valid, but semantically invalid: 
        let c: (int, int) = Main.function` [(int, int)]((1, 2));

        return;
    si
si