namespace Test is
    use Std = IO.Std;

    class Main is
        entry() static is
            let ii_ii: (int, int) = THING`[int,int].function(123, 456);
            Std.out.write_line("f[T=int,U=int](int,int): " + ii_ii);

            let is_i: int = THING`[int,string].function(123);
            Std.out.write_line("f[T=int,U=string](int): " + is_i);

            let is_s: string = THING`[int,string].function("hello");
            Std.out.write_line("f[T=int,U=string](string): " + is_s);

            let si_i: int = THING`[string,int].function(123);
            Std.out.write_line("f[T=string,U=int](int): " + si_i);

            let si_s: string = THING`[string,int].function("hello");
            Std.out.write_line("f[T=string,U=int](string): " + si_s);

            return;
        si
    si

    class THING is
        function[T](t: T) -> T static is
            Std.out.write_line("f(T=" + typeof T + "): " + t);

            return t;
        si

        function(u: U) -> U static is
            Std.out.write_line("f(U=" + typeof U + "): " + u);

            return u;
        si
        
        function(t: T, u: U) -> (t: T, u: U) static is
            Std.out.write_line("f(T=" + typeof T + ",U=" + typeof U + "): " + t + "," + u);

            return (t, u);
        si        
    si
si