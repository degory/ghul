use IO.Std.write_line;

class Base is
    value: int public;

    init() is si

    get_value() -> int => value;
si

class DERIVED: Base is
    value: int public;

    init() is si

    set_super_value(v: int) is
        super.value = v;
    si

    get_super_value() -> int => super.value;
si

entry() is
    let base = Base();

    base.value = 1234;

    write_line("base: " + base.value);

    let derived = DERIVED();

    derived.value = 5678;

    write_line("derived: " + derived.value);
    write_line("derived as base: " + cast Base(derived).value);
    write_line("derived super: " + derived.get_super_value());

    derived.set_super_value(1111);

    write_line("derived: " + derived.value);
    write_line("derived as base: " + cast Base(derived).value);
    write_line("derived super: " + derived.get_super_value());
si

