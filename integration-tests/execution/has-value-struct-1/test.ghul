use IO.Std.write_line;

entry() is
    let some = some_thing(42);
    let none = none_thing`[int]();    

    write_line(some?);
    write_line(none?);

    let things = Collections.LIST[THING[int]]();

    for i in 0..20 do
        things.add(
            if i % 2 == 0 then
                some_thing(i)
            else
                none_thing`[int]()
            fi
        );
    od

    for thing in things do
        if thing? then
            write_line("have thing: {thing!}");
        fi
    od

    // FIXME gives a (valid) constraint warning
    // but safe as we are using a struct

    let nullable_ints = 
        Collections.LIST[System.Nullable`1[int]]();

    for i in 0..20 do
        nullable_ints.add(
            if i % 2 == 1 then
                System.Nullable`1[int](i)
            else
                let empty: System.Nullable`1[int];
                empty
            fi
        );
    od

    for ni in nullable_ints do
        if ni? then
            write_line("have nullable int: {ni!}");
        fi
    od

    let thing_pairs = Collections.LIST[THING[(whole: int, half: int)]]();

    for i in 0..20 do
        thing_pairs.add(
            if i % 2 == 0 then
                some_thing((i, i / 2))
            else
                none_thing`[(int, int)]()
            fi
        );
    od

    for thing in thing_pairs do
        if thing? then
            // !. is interpreted as an operator in its own right
            // so we need to use a space to separate it from the ! operator
            // may want to make !. a special case
            write_line("have thing pair: whole {thing! .whole} half {thing! .half}");
        fi
    od
si

some_thing[T](value: T) -> THING[T] => THING[T](value);
none_thing[T]() -> THING[T] => THING[T]();

struct THING[T] is
    value: T;
    has_value: bool;

    init(value: T) is
        has_value = true;
        self.value = value;
    si

    init() is
    si

    to_string() -> string => 
        if self? then
            "some THING {value}"
        else
            "none THING"
        fi;   
si

