namespace Test is
    use IO.Std.write_line;

    class Base is
    si

    class DerivedA: Base is
        init() is si

        check() -> bool is
            write_line("DerivedA.check() is true");
            
            return true;
        si
    si
   
    class DerivedB: Base is
        init() is si

        check() -> bool is
            write_line("DerivedB.check() is false");
            
            return false;
        si        
    si

    class DerivedC: Base is
        _count: int;

        init() is si

        check() -> bool is
            _count = _count + 1;

            let result = if _count < 10 then true else false fi;

            write_line("DerivedC.check() for " + _count + " returns " + result);
            
            return result;
        si
    si

    test(a: string, b: string) is
        write_line(a, b)
    si

    entry() is
        test_if_simple();
        test_while_simple();

        test_if_complex();
    si

    test_if_simple() is
        let da = new DerivedA();
        let db = new DerivedB();

        if if da.check() then true else false fi then
            write_line("da.check() is true");
        else
            write_line("da.check() is false");
        fi;

        if if db.check() then da.check() else db.check() fi then
            write_line("db.check() is true");
        else
            write_line("db.check() is false");
        fi;
    si

    test_while_simple() is
        let dc = new DerivedC();

        let i = 0;
        while if dc.check() then true else false fi do
            write_line("dc.check() is true for " + i);

            i = i + 1;
        od;
    si

    get_boolean(t: bool) -> bool => t;

    test_if_complex() is
        let da = new DerivedA();
        let db = new DerivedB();

        if 
            if da.check() then
                write_line("within if expression: da.check() is true");
                true
            else
                write_line("within if expression: da.check() is false");
                false
            fi
        then
            write_line("da.check() is true");
        else
            write_line("da.check() is false");
        fi;

        if 
            if db.check() then 
                write_line("within if expression: db.check() is true");
                get_boolean(da.check()) 
            else
                write_line("within if expression: db.check() is false");
                get_boolean(db.check())
            fi
        then
            write_line("db.check() is true");
        else
            write_line("db.check() is false");
        fi;

        for i in 1..10 do
            write_line(
                if i < 5 then
                    write_line("i is between 1 and 4");

                    if i < 3 then
                        write_line("i is between 1 and 2");

                        if i < 2 then
                            "i is one"
                        else
                            "i is two"
                        fi
                    else
                        write_line("i is between 3 and 4");

                        if i < 4 then
                            "i is three"
                        else
                            "i is four"
                        fi
                    fi
                else
                    write_line("i is between 5 and 10");

                    if i < 8 then
                        write_line("i is between 5 and 7");

                        if i < 6 then
                            "i is five"
                        else
                            "i is six"
                        fi
                    else
                        write_line("i is between 8 and 10");

                        if i < 9 then
                            "i is seven"
                        else
                            "i is eight"
                        fi
                    fi
                fi
            )
        od
    si  
si