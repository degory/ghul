namespace Semantic is
    use IO.Std;

    use Symbols.Symbol;

    class SYMBOL_WRAPPER is
        _hash: int;
        _root_symbol: Symbol;

        symbol: Symbol;

        equals(other: object) -> bool =>
            if !other? then
                false;
            elif !isa SYMBOL_WRAPPER(other) then
                false;
            else
                self =~ cast SYMBOL_WRAPPER(other);
            fi;

        =~(other: SYMBOL_WRAPPER) -> bool =>
            _root_symbol == other._root_symbol;
        
        init(symbol: Symbol) is
            _root_symbol = symbol.root_specialized_from;

            _hash = _root_symbol.get_hash_code();

            self.symbol = symbol;
        si

        get_hash_code() -> int => _hash;

        to_string() -> string => "{symbol}";
    si
si
