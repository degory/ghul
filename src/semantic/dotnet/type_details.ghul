namespace Semantic.DotNet is
    use IO.Std;

    use TYPE = System.Type2;    

    class TYPE_DETAILS is        
        dotnet_type: TYPE;
        ghul_namespace: string;
        ghul_type_name: string;
        il_name: string;
        assembly_name: string;
        version_number: string;

        init(
            dotnet_type: TYPE, 
            ghul_namespace: string,
            ghul_type_name: string,
            il_name: string,
            assembly_name: string,
            version_number: string
        ) is
            assert dotnet_type? else "dotnet_type is null";
            assert ghul_namespace? else "ghul namespace is null";
            assert ghul_type_name? else "ghul type name is null";

            self.dotnet_type = dotnet_type;

            self.ghul_namespace = ghul_namespace;
            self.ghul_type_name = ghul_type_name;
            self.il_name = il_name;
            self.assembly_name = assembly_name;
            self.version_number = version_number;
        si

        init(
            dotnet_type: TYPE, 
            assembly_name: string,
            version_number: string
        ) is
            assert dotnet_type? else "dotnet_type is null";

            self.dotnet_type = dotnet_type;

            self.ghul_namespace = dotnet_type.`namespace;
            self.ghul_type_name = dotnet_type.name;
            self.il_name = dotnet_type.name;
            self.assembly_name = assembly_name;
            self.version_number = version_number;
        si

        matches(namespace_name: string, name: string) -> bool => 
            namespace_name =~ ghul_namespace /\ name =~ ghul_type_name;

        merge_assembly_reference(type: TYPE, assembly_name: string, assembly_version: string) is
            if !self.assembly_name? then
                self.assembly_name = assembly_name;
                self.version_number = assembly_version;
            fi
        si

        to_string() -> string => "(.NET type: {dotnet_type} ghul ns: {ghul_namespace} ghul name: {ghul_type_name} il_name: {il_name} assembly_name: {assembly_name})";
    si
si