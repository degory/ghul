namespace Semantic is
    use System.String;
    use System.Console;

    use Collections.MAP;
    use Collections.Iterable;

    class ASSEMBLIES is
        _type_name_map: TYPE_NAME_MAP;

        assemblies: MAP[String,ASSEMBLY];

        init(type_name_map: TYPE_NAME_MAP) is
            _type_name_map = type_name_map;
            assemblies = new MAP[String,ASSEMBLY]();
        si

        import_(assembly_names: Iterable[String]) is
            for assembly_name in assembly_names do
                import_(assembly_name);
            od            
        si

        // FIXME: once import is no-longer a token, remove '_'
        import_(assembly_name: String) is
            if assemblies.contains_key(assembly_name) then
                return;
            fi

            let assembly = new ASSEMBLY(_type_name_map, assembly_name);

            for qualified_name in assembly.namespaces do
                assemblies.add(qualified_name, assembly);
            od
        si

        find(namespace_name: String, symbol_name: String) -> Symbol.BASE is
            // Console.error.write_line("search for symbol in assemblies: " + namespace_name + " . " + name);            
            let assembly: ASSEMBLY;

            if !assemblies.try_get_value(namespace_name, assembly ref) then
                return null;
            fi

            return assembly.find(symbol_name);            
        si       
    si
si