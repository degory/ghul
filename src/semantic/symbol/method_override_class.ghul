namespace Semantic is
    use object = System.Object;
    use string = System.String;
    use STD = System.Console;

        use System.Console;
    use System.Text.StringBuilder;

    use Collections.Iterable;
    use Collections.Iterator;
    use Collections.LIST;
    use Collections.MAP;
    use Collections.SET;

    use Symbol.Function;

    class METHOD_OVERRIDE_CLASS is
        arguments: LIST[Type.BASE];

        init(arguments: LIST[Type.BASE]) is
            assert arguments? else "override class arguments list is null";
            self.arguments = arguments;
        si

        =~(other: METHOD_OVERRIDE_CLASS) -> bool is            
            if other.arguments.count != arguments.count then
                return false;
            fi
            
            for i in 0..arguments.count do
                if arguments[i] !~ other.arguments[i] then                    
                    return false;
                fi                
            od    
            
            return true;
        si

        @IL.name("Equals")
        =~(other: object) -> bool is
            if !other? then
                return false;
            fi

            if !isa METHOD_OVERRIDE_CLASS(other) then
                return false;
            fi

            return self =~ cast METHOD_OVERRIDE_CLASS(other);
        si
        
        get_hash_code() -> int is
            let result = 0;

            for a in arguments do
                result = result + a.get_hash_code();
            od

            return result;
        si

        to_string() -> string => "(" + new Shim.JOIN[Type.BASE](arguments) + ")";
    si    
si