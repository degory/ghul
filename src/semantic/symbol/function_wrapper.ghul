namespace Semantic is
    use System.String;

    use Symbol.Function;

    class FUNCTION_WRAPPER is
        _hash: int;
        _root_function: Symbol.BASE;

        function: Function;

        @IL.name("Equals")
        =~(other: System.Object) -> bool is
            if !other? then
                return false;
            elif !isa FUNCTION_WRAPPER(other) then
                return false;
            fi

            return self =~ cast FUNCTION_WRAPPER(other);
        si

        @IL.name("Equals")
        =~(other: FUNCTION_WRAPPER) -> bool is
            let result = _root_function == other._root_function;

            @IF.debug() System.Console.write_line("compare functions: " + _root_function + " vs " + other._root_function + ": " + result);

            return result;
        si
        
        init(function: Function) is
            _root_function = function.root_specialized_from;

            _hash = _root_function.get_hash_code();

            self.function = function;
        si
        
        hash() -> int => _hash;

        get_hash_code() -> int => _hash;

        to_string() -> String => "" + function;
    si
si
