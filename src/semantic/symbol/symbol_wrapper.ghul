namespace Semantic is
    use System.String;

    use Symbol.BASE;

    class SYMBOL_WRAPPER is
        _hash: int;
        _root_symbol: BASE;

        symbol: BASE;

        @IL.name("Equals")
        =~(other: System.Object) -> bool is
            if !other? then
                return false;
            elif !isa SYMBOL_WRAPPER(other) then
                return false;
            fi

            return self =~ cast SYMBOL_WRAPPER(other);
        si

        @IL.name("Equals")
        =~(other: SYMBOL_WRAPPER) -> bool =>
            _root_symbol == other._root_symbol;
        
        init(symbol: BASE) is
            _root_symbol = symbol.root_specialized_from;

            @IF.legacy()
            _hash = _root_symbol.hash();

            @IF.dotnet()
            _hash = _root_symbol.get_hash_code();

            self.symbol = symbol;
        si
        
        hash() -> int => _hash;

        get_hash_code() -> int => _hash;

        to_string() -> String => "" + symbol; //  + " (from " + _root_symbol + ", hash: " + _hash + ")";

        @IF.legacy()
        toString() -> String => to_string();
    si
si
