namespace Semantic.Types is

    use Source.LOCATION;
    
    class FUNCTION: GENERIC is
        init(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) is
            super.init(location, symbol, arguments);
        si

        create(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) -> GENERIC is
            return new FUNCTION(location, symbol, arguments);
        si

        to_string() -> string is
            let result = new System.Text.StringBuilder();

            if arguments.count == 2 then
                result
                    .append(arguments[0])
                    .append(" -> ")
                    .append(arguments[1]);
            elif arguments.count == 1 then
                result
                    .append("() -> ")
                    .append(arguments[0]);
            else
                result.append('(');

                for i in 0..arguments.count do
                    result.append(arguments[i]);

                    if i == arguments.count - 2 then
                        result.append(") -> ");
                    elif i != arguments.count - 1 then
                        result.append(',');
                    fi
                od
            fi

            return result.to_string();
        si
    si


si
