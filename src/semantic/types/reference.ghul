namespace Semantic.Types is

    use Source.LOCATION;

    class REFERENCE: GENERIC is
        short_description: string => get_short_description(self);
        is_ref: bool => true;

        get_short_description(reference: GENERIC) -> string static => "{reference.arguments[0]} ref";

        init(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.List[Type]
        ) is
            super.init(Symbols.REFERENCE(location, symbol, arguments[0]));
        si

        create(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.List[Type]
        ) -> GENERIC =>
            Types.REFERENCE(location, symbol, arguments);

        gen_class_name(buffer: System.Text.StringBuilder) is
            gen_type(buffer);
        si

        gen_type(buffer: System.Text.StringBuilder) is
            arguments[0].gen_type(buffer);
            buffer.append("& ");
        si

        to_string() -> string => get_short_description(self);            
    si    
si
