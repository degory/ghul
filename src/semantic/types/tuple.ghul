namespace Semantic.Types is
    use Source.LOCATION;
        
    class TUPLE: GENERIC is
        short_description: string => get_short_description(self);
        
        get_short_description(tuple: GENERIC) -> string static is
            let args = tuple.arguments;

            return
                "(" + (0..args.count) | .map(i: int => args[i].short_description) + ")";
        si

        init(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) is
            super.init(location, symbol, arguments);
        si

        create(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) -> GENERIC is
            return new TUPLE(location, symbol, arguments);
        si

        to_string() -> string => get_short_description(self);
    si
si
