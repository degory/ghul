namespace Semantic.Types is

    use Source.LOCATION;
    
    class ACTION: GENERIC is
        is_function: bool => true;

        short_description: string => get_short_description(self);

        get_short_description(action: GENERIC) -> string static is
            let result = new System.Text.StringBuilder();

            let args = action.arguments;

            if args.count == 1 then
                result
                    .append(args[0])
                    .append(" -> void");
            else
                result.append('(');

                (0..args.count) | .map(i: int => args[i]).append_to(result);

                result.append(") -> void");
            fi

            return result.to_string();
        si
        
        init(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) is
            super.init(location, symbol, arguments);
        si

        create(
            location: LOCATION,
            symbol: Symbols.Classy,
            arguments: Collections.LIST[Type]
        ) -> GENERIC is
            return new ACTION(location, symbol, arguments);
        si

        to_string() -> string => get_short_description(self);
    si
si
