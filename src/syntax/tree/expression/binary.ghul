namespace Syntax.Tree.Expression is
    use System;
    use Generic;

    use Source;

    class BINARY : NODE is
        operation: Identifier.NODE;
        actual_operation: String;
        left: NODE;
        right: NODE;

        init(location: LOCATION, operation: Identifier.NODE, actual_operation: String, left: NODE, right: NODE) is
            super.init(location);
            
            self.operation = operation;
            self.actual_operation = actual_operation;
            self.left = left;
            self.right = right;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                left.walk(visitor);
                right.walk(visitor);
            fi
            accept(visitor);
        si

        rewrite(m: Dict[Tree.NODE,Tree.NODE]) is
            left = cast NODE(m[left]);
            right = cast NODE(m[right]);
        si       
    si
si
