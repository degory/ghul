namespace Syntax.Tree.Expression is
    use System;
    use Generic;

    use Source;

    class LIST: Tree.NODE, Collections.Iterable[NODE] is
        expressions: Collections.List[NODE];
        
        init(location: LOCATION, expressions: Collections.Iterable[NODE]) is
            super.init(location);
            
            self.expressions = new Collections.LIST[NODE](expressions);
        si

        iterator: Collections.Iterator[NODE] is
            return expressions.iterator;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                for e in expressions do
                    e.walk(visitor);
                od
            fi
            accept(visitor);
        si
    si
si
