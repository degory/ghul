namespace Syntax.Tree.Modifier is
    use System;

    use Source;

    class NODE: Tree.NODE is
        init(location: LOCATION) is
            super.init(location);
        si

        name: String is
            throw new NotImplementedException("" + self + " does not implement name");
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si
    si

    class ACCESS_MODIFIER : NODE  is
        init(location: LOCATION) is
            super.init(location);
        si

        copy() -> ACCESS_MODIFIER =>
            cast ACCESS_MODIFIER(clone());        
    si

    class STORAGE_CLASS : NODE  is
        init(location: LOCATION) is
            super.init(location);
        si

        copy() -> STORAGE_CLASS =>
            cast STORAGE_CLASS(clone());                
    si

    class PUBLIC : ACCESS_MODIFIER  is
        name: String => "public";

        init(location: LOCATION) is
            super.init(location);
        si
    si

    class PROTECTED : ACCESS_MODIFIER  is
        name: String => "protected";

        init(location: LOCATION) is
            super.init(location);
        si
    si

    class PRIVATE : ACCESS_MODIFIER  is
        name: String => "private";

        init(location: LOCATION) is
            super.init(location);
        si
    si

    class STATIC : STORAGE_CLASS  is
        name: String => "static";

        init(location: LOCATION) is
            super.init(location);
        si
    si

    class CONST : STORAGE_CLASS  is
        name: String => "const";

        init(location: LOCATION) is
            super.init(location);
        si
    si
si
