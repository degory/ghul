namespace Syntax.Tree.Definition is
    use Generic;

    use Source;

    class USE: NODE  is
        uses: Collections.MutableList[Identifier.NODE];
        
        @IL.name.read("GetEnumerator")
        iterator: Collections.Iterator[Identifier.NODE] => uses.iterator;

        reverse_iterator: Collections.Iterator[Identifier.NODE] is
            let result = new Collections.LIST[Identifier.NODE](uses);
            result.reverse();
            return result.iterator;
        si

        init(location: LOCATION, uses: Collections.MutableList[Identifier.NODE]) is
            super.init(location);

            self.uses = uses;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                for u in uses do
                    u.walk(visitor);
                od
            fi
            
            accept(visitor);
        si
    si
si
