namespace Syntax.Tree.Definition is
    use System;
    use Generic;

    use Source;

    class LIST: NODE, Collections.Iterable[NODE]  is
        definitions: Collections.MutableList[NODE];

        @IL.name.read("GetEnumerator")
        iterator: Collections.Iterator[NODE] => definitions.iterator;

        uses: Collections.LIST[USE] is
            var result = new Collections.LIST[USE](definitions.count);

            for d in definitions do
                if isa USE(d) then
                    result.add(cast USE(d));
                fi
            od
            
            return result;
        si
        
        init(location: LOCATION, definitions: Collections.Iterable[NODE]) is
            super.init(location);

            self.definitions = new Collections.LIST[NODE](definitions);
        si

        add(definition: NODE) is
            definitions.add(definition);
        si

        push(definition: NODE) is
            let nd = new Collections.LIST[NODE](definitions.count + 1);

            nd.add(definition);
            nd.add_range(definitions);

            definitions = nd;
        si

        remove(definition: NODE) is
            definitions.remove(definition);
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            @IF.dotnet()
            System.Console.write_line("walk definition list: " + visitor);

            if !visitor.pre(self) then
                @IF.dotnet()
                System.Console.write_line("walk " + definitions.count + " definitions: " + visitor);

                for d in definitions do
                    @IF.dotnet()
                    System.Console.write_line("walk definition: " + visitor);

                    d.walk(visitor);

                    @IF.dotnet()
                    System.Console.write_line("walked definition: " + visitor);
                od
            fi

            @IF.dotnet()
            System.Console.write_line("accept visitor list: " + visitor);
            
            accept(visitor);

            @IF.dotnet()
            System.Console.write_line("done walk definition list: " + visitor);
        si
    si
si
