namespace Syntax.Parser.Definition is
    use Generic;
    use System;

    use Source;

    class IMPORT: BASE[Tree.Definition.IMPORT] is
        identifier_parser: Parser[Tree.Identifier.NODE];

        init(identifier_parser: Parser[Tree.Identifier.NODE]) is
            super.init();
            self.identifier_parser = identifier_parser;
        si

        parse(context: CONTEXT) -> Tree.Definition.IMPORT is
            var start = context.location;
            context.next_token(Lexical.TOKEN.IMPORT);
            var imports = new Collections.LIST[Tree.Identifier.NODE]();

            do
                var import_ = identifier_parser.parse(context);
                imports.add(import_);
                if context.current.token == Lexical.TOKEN.COMMA then
                    context.next_token();
                else
                    break;
                fi
            od

            var result = new Tree.Definition.IMPORT(start::context.location, imports);
            context.next_token(Lexical.TOKEN.SEMICOLON);

            return result;
        si
    si
si
