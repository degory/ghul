namespace Syntax.Parsers.Definitions is
    use System;
    
    use Source;

    class PRAGMA: Base[Trees.Definitions.PRAGMA] is
        pragma_parser: Parser[Trees.Pragmas.PRAGMA];
        definition_parser: Parser[Trees.Definitions.Definition];

        init(
            pragma_parser: Parser[Trees.Pragmas.PRAGMA],
            definition_parser: Parser[Trees.Definitions.Definition]
        ) is
            super.init();

            self.pragma_parser = pragma_parser;
            self.definition_parser = definition_parser;
        si

        parse(context: CONTEXT) -> Trees.Definitions.PRAGMA is
            let pragma_ = pragma_parser.parse(context);

            if pragma_? && !pragma_.is_poisoned then
                let definition = definition_parser.parse(context);

                if definition? && !definition.is_poisoned then
                    return new Trees.Definitions.PRAGMA(pragma_.location::definition.location, pragma_, definition);
                fi
            fi
        si
    si
si
