namespace Syntax.Parser.Definition is
    use System;
    
    use Source;

    class PRAGMA: BASE[Tree.Definition.PRAGMA] is
        pragma_parser: Parser[Tree.Pragma.NODE];
        definition_parser: Parser[Tree.Definition.NODE];

        init(
            pragma_parser: Parser[Tree.Pragma.NODE],
            definition_parser: Parser[Tree.Definition.NODE]
        ) is
            super.init();

            self.pragma_parser = pragma_parser;
            self.definition_parser = definition_parser;
        si

        parse(context: CONTEXT) -> Tree.Definition.PRAGMA is
            let pragma_ = pragma_parser.parse(context);

            if pragma_? && !pragma_.is_poisoned then
                let definition = definition_parser.parse(context);

                if definition? && !definition.is_poisoned then
                    return new Tree.Definition.PRAGMA(pragma_.location::definition.location, pragma_, definition);
                fi
            fi
        si
    si
si
