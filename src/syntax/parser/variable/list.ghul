namespace Syntax.Parser.Variable is
    use System;
    
    use Source;

    class LIST: BASE[Tree.Variable.LIST] is
        allow_empty: bool;
        variable_parser: Parser[Tree.Variable.NODE];

        init(variable_parser: Parser[Tree.Variable.NODE]) is
            super.init();

            self.variable_parser = variable_parser;
        si

        parse(context: CONTEXT) -> Tree.Variable.LIST is
            let start = context.location;
            var end = context.location;
            let variables = new Collections.LIST[Tree.Variable.NODE]();
            
            if 
                context.current.token == Lexical.TOKEN.IDENTIFIER || !allow_empty
            then
                do
                    let variable = variable_parser.parse(context);

                    if variable? then
                        end = variable.location;
                        variables.add(variable);

                        if context.is_end_of_file || context.current.token != Lexical.TOKEN.COMMA then
                            break;
                        else
                            context.next_token();
                        fi
                        
                    else
                        end = context.location;
                        break;
                    fi                    
                od
            fi
            
            return new Tree.Variable.LIST(start::end, variables);
        si
    si
si
