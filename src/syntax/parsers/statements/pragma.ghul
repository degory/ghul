namespace Syntax.Parsers.Statements is
    
    use Source;

    class PRAGMA: Base[Trees.Statements.PRAGMA] is
        pragma_parser: Parser[Trees.Pragmas.PRAGMA];
        statement_parser: Parser[Trees.Statements.Statement];

        init(
            pragma_parser: Parser[Trees.Pragmas.PRAGMA],
            statement_parser: Parser[Trees.Statements.Statement]
        ) is
            super.init();

            self.pragma_parser = pragma_parser;
            self.statement_parser = statement_parser;
        si

        parse(context: CONTEXT) -> Trees.Statements.PRAGMA is
            let pragma_ = pragma_parser.parse(context);

            if pragma_? /\ !pragma_.is_poisoned then
                let statement = statement_parser.parse(context);

                if statement? /\ !statement.is_poisoned then
                    return new Trees.Statements.PRAGMA(pragma_.location::statement.location, pragma_, statement);
                fi
            fi
        si
    si
si
