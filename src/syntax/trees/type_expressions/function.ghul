namespace Syntax.Trees.TypeExpressions is
    use Source;
    
    class FUNCTION: TypeExpression  is
        result: TypeExpression;
        arguments: LIST;

        // is_void here means 'uses a void type incorrectly', like void[], or ref void.
        // for a function, it's not valid to have a void type as an argument:
        is_void: bool =>
            arguments | .any(a => a? /\ a.is_void);

        init(location: LOCATION, arguments: LIST, result: TypeExpression) is
            super.init(location);
            
            self.result = result;
            self.arguments = arguments;
        si

        copy() -> TypeExpression =>
            new FUNCTION(
                location,
                arguments.copy(),                
                result.copy()
            );

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                result.walk(visitor);
                arguments.walk(visitor);
            fi
            accept(visitor);
        si
    si
si
