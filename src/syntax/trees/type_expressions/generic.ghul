namespace Syntax.Trees.TypeExpressions is
    
    use Source;

    class GENERIC: NAMED is
        arguments: TypeExpressions.LIST;

        is_void: bool =>
            arguments | .has(e => e? /\ e.is_void);
        
        init(location: LOCATION, name: Identifiers.Identifier, arguments: TypeExpressions.LIST) is
            super.init(location, name);

            self.arguments = arguments;
        si

        copy() -> TypeExpression =>
            new GENERIC(
                location,
                name.copy(),
                arguments.copy()
            );

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                arguments.walk(visitor);
            fi
            accept(visitor);
        si
    si
si
