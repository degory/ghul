namespace Syntax.Trees.Definitions is
    use Source;

    use Logging;

    class VARIANT: Classy  is
        description_for_walk: string => "variant";

        fields: Variables.LIST;

        init(
            location: LOCATION,
            name: Identifiers.Identifier,
            fields: Variables.LIST,
            modifiers: Modifiers.LIST
        )
        is
            super.init(
                location, 
                name, 
                null,
                null,
                modifiers,
                Definitions.LIST(LOCATION.internal, System.Array.empty`[Definitions.Definition]())
            );

            self.fields = fields;
        si

        set_arguments(arguments: TypeExpressions.LIST) is
            self.arguments = arguments;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        _walk(visitor: Visitor) is
            if !visitor.pre(self) then
                name.walk(visitor);

                if arguments? then
                    arguments.walk(visitor);
                fi

                modifiers.walk(visitor);

                fields.walk(visitor);

                body.walk(visitor);
            fi

            accept(visitor);
        si
    si
si
