namespace Syntax.Trees.Definitions is
        use Source;

    class ENUM: Classy  is
        members: Collections.LIST[ENUM_MEMBER];

        init(
            location: LOCATION,
            name: Identifiers.Identifier,
            modifiers: Modifiers.LIST,
            members: Collections.LIST[ENUM_MEMBER]
        ) is
            super.init(
                location,
                name,
                null,
                null, 
                modifiers,
                new LIST(location, members| .map(m -> Definition => m))
            );

            self.members = members;
        si
        
        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                name.walk(visitor);
                modifiers.walk(visitor);

                for m in members do
                    m.walk(visitor);
                od
            fi

            accept(visitor);
        si

    si

    class ENUM_MEMBER: Definition is
        name: Identifiers.Identifier;
        initializer: Expressions.Expression;

        init(
            location: LOCATION,
            name: Identifiers.Identifier,
            initializer: Expressions.Expression
        ) is
            super.init(location);

            self.name = name;
            self.initializer = initializer;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                name.walk(visitor
                );
                if initializer? then
                    initializer.walk(visitor);
                fi
            fi

            accept(visitor);
        si
    si
si
