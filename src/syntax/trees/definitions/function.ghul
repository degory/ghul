namespace Syntax.Trees.Definitions is
    use IO.Std;

    use Source;
    
    class FUNCTION: MODIFIABLE  is
        name: Identifiers.Identifier;
        generic_arguments: TypeExpressions.LIST;
        arguments: Variables.LIST;
        type_expression: TypeExpressions.TypeExpression;
        body: Bodies.Body;

        for_property: PROPERTY public;
        
        init(
            location: LOCATION,
            name: Identifiers.Identifier, 
            generic_arguments: TypeExpressions.LIST,
            arguments: Variables.LIST,
            type_expression: TypeExpressions.TypeExpression,
            modifiers: Modifiers.LIST,
            body: Bodies.Body
        ) is
            super.init(location, modifiers);

            self.name = name;
            self.generic_arguments = generic_arguments;
            self.arguments = arguments;
            self.type_expression = type_expression;
            self.body = body;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                if name? then
                    name.walk(visitor);
                fi

                if arguments? then
                    arguments.walk(visitor);
                fi

                if type_expression? then
                    type_expression.walk(visitor);
                fi

                if body? then
                    body.walk(visitor);
                fi
            fi

            accept(visitor);
        si
    si
si
