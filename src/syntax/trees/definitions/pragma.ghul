namespace Syntax.Trees.Definitions is
    use Source;

    class PRAGMA: Definition  is
        without_pragmas: Definition => definition.without_pragmas;

        pragma_: Pragmas.PRAGMA;
        definition: Definition public;
        
        init(
            location: LOCATION,
            pragma_: Pragmas.PRAGMA,
            definition: Definition
        ) is
            super.init(location);

            self.pragma_ = pragma_;
            self.definition = definition;
        si

        is_name_equal_to(name: string) -> bool => pragma_? /\ pragma_.is_name_equal_to(name);

        try_get_string_literal_at(index: int) -> string is
            if pragma_? then
                return pragma_.try_get_string_literal_at(index);
            fi
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                if pragma_? then
                    pragma_.walk(visitor);
                fi
                
                if definition? then
                    definition.walk(visitor);
                fi
            fi
            
            accept(visitor);
        si
    si
si
