namespace Syntax.Trees.Pragmas is
    use Source;
    
    class PRAGMA: Trees.NodeBase is
        name: Identifiers.Identifier;
        arguments: Expressions.LIST;

        init(
            location: LOCATION,
            name: Identifiers.Identifier, 
            arguments: Expressions.LIST
        ) is
            super.init(location);

            assert name?;

            self.name = name;
            self.arguments = arguments;
        si

        is_name_equal_to(other_name: string) -> bool => name? /\ other_name =~ name.name;

        try_get_string_literal_at(index: int) -> string is
            if !arguments? then
                return null;
            fi

            return arguments.try_get_string_literal_at(index);            
        si
        

        accept(visitor: Visitor) is
            visitor.visit(self);
        si

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                name.walk(visitor);

                if arguments? then
                    arguments.walk(visitor);
                fi
            fi

            accept(visitor);
        si
    si
si
