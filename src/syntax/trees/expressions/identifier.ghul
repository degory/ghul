namespace Syntax.Trees.Expressions is
        
    use Source;

    class IDENTIFIER: Expression  is
        identifier: Identifiers.Identifier;
        types: TypeExpressions.LIST;

        could_be_formal_argument: bool => !types?;

        init(location: LOCATION, identifier: Identifiers.Identifier, types: TypeExpressions.LIST) is
            super.init(location);

            self.identifier = identifier;
            self.types = types;
        si

        init(location: LOCATION, identifier: Identifiers.Identifier) =>
            self.init(location, identifier, null);

        accept(visitor: Visitor) =>
            visitor.visit(self);

        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                if types? then
                    types.walk(visitor);
                fi
                
                identifier.walk(visitor);
            fi

            accept(visitor);
        si
    si
si
