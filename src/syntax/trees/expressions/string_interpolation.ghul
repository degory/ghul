namespace Syntax.Trees.Expressions is
    use IO.Std;
    use Source;

    class STRING_INTERPOLATION: Expression is
        values: Collections.List[Expression];
        literal_length: int;
        expression_count: int;

        init(
            location: LOCATION, 
            values: Collections.List[Expression],
            literal_length: int,
            expression_count: int
        ) is
            super.init(location);

            self.values = values;
            self.literal_length = literal_length;
            self.expression_count = expression_count;
        si

        accept(visitor: Visitor) is
            visitor.visit(self);
        si
   
        walk(visitor: Visitor) is
            if !visitor.pre(self) then
                for v in values do
                    v.walk(visitor);
                od
            fi

            accept(visitor);
        si
    si
si
