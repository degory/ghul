namespace Generic is
    use System;

    @IF.legacy()
    class Lazy[T] is
        _value: T;
        _has_value: bool;
        _create: () -> T;
        _exception: Exception;

        init(create: () -> T) is
            self._create = create;
        si

        value: T is
            if _has_value then
                return _value;
            elif _exception? then
                throw _exception;
            else
                try
                    if _create == null then
                        throw new NullPointerException("cannot create " + self + " from null create proc");
                    fi
                    _value = _create();
                    _has_value = true;
                catch e: Exception
                    _exception = e;
                    throw e;
                yrt
                
                return value;
            fi
        si
    si

    @IF.dotnet()
    class Lazy[T] is
        _lazy: System.LAZY[T];

        value: T => _lazy.value;

        init(create: () -> T) is
            _lazy = new System.LAZY[T](create);
        si        
    si
si

@IF.dotnet()
namespace System is
    @IL.stub()

    @IL.name("class [mscorlib]System.Lazy`1")
    class LAZY[T] is
        @IL.name.read("get_Value")
        value: T;
    
        @IL.name(".ctor")
        init(create: () -> T);
    si
si
