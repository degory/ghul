namespace Driver is
    use Collections;

    class ARGUMENTS_PARSER is
        init() is
            
        si
        
        parse_arguments(arguments: string) -> Iterable[string] is
            let results = new LIST[string]();

            let input = arguments.iterator;

            let more = input.move_next();

            while more do
                more = _skip_whitespace(input);

                if !more then
                    return results;
                fi
                
                let a: (argument: string, more: bool);

                if input.current == cast char(34) then
                    a = _parse_quoted_argument(input);
                else 
                    a = _parse_unquoted_argument(input);
                fi
                                
                more = a.more;

                results.add(a.argument);
            od

            return results;
        si

        _skip_whitespace(input: Iterator[char]) -> bool is
            let more = true;

            while more /\ char.is_white_space(input.current) do
                more = input.move_next();
            od
            
            return more;
        si

        _parse_quoted_argument(input: Iterator[char]) -> (argument: string, more: bool) is
            // FIXME: doesn't support nested/escaped quotes, but neither do the MSBuild targets
            let result = new System.Text.StringBuilder();

            let more = input.move_next(); // skip opening quote

            while more /\ input.current != cast char(34) do
                result.append(input.current);

                more = input.move_next();
            od

            return (result.to_string(), more /\ input.move_next());
        si

        _parse_unquoted_argument(input: Iterator[char]) -> (argument: string, more: bool) is
            let result = new System.Text.StringBuilder();
            let more = true;

            while more /\ !char.is_white_space(input.current) do
                result.append(input.current);

                more = input.move_next();
            od

            return (result.to_string(), more);
        si
    si   
si
