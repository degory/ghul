namespace Driver is
    use System.NotImplementedException;

    use Logging.TIMERS;
    use Logging.TIMER;
    
    class Pass is
        _timers: TIMERS;
        _description: string;

        is_task_safe: bool => false;

        init(
            timers: TIMERS,
            description: string
        )
        is
            self._timers = timers;
            self._description = description;
        si

        start() is
            _timers.start(_description);
        si

        apply(source_file: SOURCE_FILE) is
            throw new NotImplementedException();
        si

        finish() is
            _timers.finish(_description);
        si    

        get_hash_code() -> int => _description.get_hash_code();

        to_string() -> string => _timers[_description].to_string();
    si

    class PASS: Pass is
        _is_task_safe: bool;
        _start: () -> void;
        _apply: SOURCE_FILE -> void;
        _finish: () -> void;

        is_task_safe: bool => _is_task_safe;

        init(
            timers: TIMERS,
            description: string,
            start: () -> void,
            apply: SOURCE_FILE -> void,
            finish: () -> void,
            is_task_safe: bool
        )
        is
            super.init(timers, description);
            _start = start;
            _apply = apply;
            _finish = finish;

            _is_task_safe = is_task_safe;
        si

        start() is
            super.start();

            if _start? then
                _start();
            fi            
        si

        apply(source_file: SOURCE_FILE) is
            _apply(source_file);
        si

        finish() is
            if _finish? then
                _finish();
            fi

            super.finish();
        si    
    si
si