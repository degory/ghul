namespace Driver is
    use System;
    
    class Pass is
        _apply_count: int;

        _start_time: DateTime;

        _description: String;

        pass_count: int;
        total_time: TimeSpan;

        init(
            description: String
        )
        is
            self._description = description;
        si

        start() is
            _start_time = DateTime.now;
        si

        apply(work_item: WORK_ITEM) is
            throw new NotImplementedException();
        si

        finish() is
            pass_count = pass_count + 1;

            total_time = total_time.add(_start_time.subtract(DateTime.now));
        si    

        get_hash_code() -> int => _description.get_hash_code();

        to_string() -> String => _description;
    si

    class PASS: Pass is
        _start: () -> void;
        _apply: WORK_ITEM -> void;
        _finish: () -> void;

        init(
            description: String,
            start: () -> void,
            apply: WORK_ITEM -> void,
            finish: () -> void
        )
        is
            super.init(description);
            _start = start;
            _apply = apply;
            _finish = finish;
        si

        start() is
            super.start();

            if _start? then
                _start();
            fi            
        si

        apply(work_item: WORK_ITEM) is
            _apply(work_item);
        si

        finish() is
            if _finish? then
                _finish();
            fi

            super.finish();
        si    
    si
si