namespace Driver is
    use System;
    
    class Pass is
        _description: String;

        init(
            description: String
        )
        is
            self._description = description;
        si

        apply(work_item: WORK_ITEM) is
            throw new NotImplementedException();
        si

        @IF.legacy()
        hash() -> int => _description.hash();

        @IF.dotnet()
        get_hash_code() -> int => _description.get_hash_code();

        @IF.legacy()
        toString() -> String => _description;

        @IF.dotnet()
        @IL.name("ToString")
        to_string() -> String => _description;
    si

    class PASS: Pass is
        _apply: WORK_ITEM -> void;

        init(
            description: String,
            apply: WORK_ITEM -> void
        )
        is
            super.init(description);
            self._apply = apply;
        si

        apply(work_item: WORK_ITEM) is
            _apply(work_item);
        si
    si
si