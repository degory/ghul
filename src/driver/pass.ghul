namespace Driver is
    use System;

    use Logging.TIMERS;
    use Logging.TIMER;
    
    class Pass is
        _timers: TIMERS;
        _description: String;

        init(
            timers: TIMERS,
            description: String
        )
        is
            self._timers = timers;
            self._description = description;
        si

        start() is
            _timers.start(_description);
        si

        apply(work_item: WORK_ITEM) is
            throw new NotImplementedException();
        si

        finish() is
            _timers.finish(_description);
        si    

        get_hash_code() -> int => _description.get_hash_code();

        to_string() -> String => _timers[_description].to_string();
    si

    class PASS: Pass is
        _start: () -> void;
        _apply: WORK_ITEM -> void;
        _finish: () -> void;

        init(
            timers: TIMERS,
            description: String,
            start: () -> void,
            apply: WORK_ITEM -> void,
            finish: () -> void
        )
        is
            super.init(timers, description);
            _start = start;
            _apply = apply;
            _finish = finish;
        si

        start() is
            super.start();

            if _start? then
                _start();
            fi            
        si

        apply(work_item: WORK_ITEM) is
            _apply(work_item);
        si

        finish() is
            if _finish? then
                _finish();
            fi

            super.finish();
        si    
    si
si