namespace IR is
    use Logging;

    class BLOCK_STACK: BlockContext is
        _blocks: Collections.STACK[Values.BLOCK];

        is_in_block: bool => _blocks.count > 0;

        init() is
            _blocks = new Collections.STACK[Values.BLOCK]();
        si

        mark() -> int => _blocks.count;

        release(mark: int) is
            while _blocks.count > mark do
                _blocks.pop();
            od
        si

        current_block: Values.BLOCK is
            assert _blocks.count > 0 else "BS {get_hash_code()}: no block on stack";

            return _blocks.peek();
        si
        
        enter_block(block: Values.BLOCK) is
            _blocks.push(block);
        si

        enter_block(type: Semantic.Types.Type) is
            enter_block(new Values.BLOCK(type));
        si

        enter_block() is
            enter_block(new Values.BLOCK());
        si

        leave_block() is
            _blocks.pop();
        si

        add(value: Values.Value) is
            current_block.add(value);
        si

        add(raw: string) is
            current_block.add(raw);
        si
    si
si