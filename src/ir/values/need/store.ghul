namespace IR.Values.Need is
    use TypeTyped = Semantic.Types.Typed;
    use Semantic.Types.Type;
    use SymbolBase = Semantic.Symbols.Symbol;

    class STORE: Value is
        has_type: bool => value? /\ value.has_type;
        type: Type => value.type;
        value: Value;
        is_consumable: bool => false;

        init(value: Value) is
            super.init();

            assert value?;    

            self.value = value;
        si

        gen(context: IR.CONTEXT) is
            gen(value, context);

            assert false else "unresolved need store";
        si

        to_string() -> string =>
            "need-store:[{type}]";
    si
si