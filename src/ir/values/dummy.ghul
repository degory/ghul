namespace IR.Values is
    use TypeTyped = Semantic.Types.Typed;
    use Semantic.Types.Type;

    class DUMMY: Value, TypeTyped is        
        has_type: bool => type?;
        type: Type;
        location: Source.LOCATION;
        message: string;

        init(
            type: Type,
            location: Source.LOCATION,
            message: string
        ) is
            super.init();

            assert type?;
            assert location?;

            self.type = type;
            self.location = location;
            self.message = message;
        si

        gen(context: IR.CONTEXT) is
            if message? then
                IoC.CONTAINER.instance.logger.poison(location, message);
                context.fixme("dummy " + type + " " + message + " from " + location);
            else
                IoC.CONTAINER.instance.logger.poison(location, "generated invalid IR");
                context.fixme("dummy " + type + " from " + location);
            fi
        si

        to_string() -> string =>
            "isa:[" + type + "]()";
    si
si