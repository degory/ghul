namespace IR.Values is
    use Semantic.Types.Type;
    
    class CONVERT: Value is
        has_type: bool => type?;
        type: Type;
        value: Value;
        instruction: string;

        init(
            type: Type,
            value: Value,
            instruction: string
        ) is
            super.init();

            assert type?;
            assert value?;

            self.type = type;
            self.value = value;
            self.instruction = instruction;
        si

        gen(context: IR.CONTEXT) is
            gen(value, context);

            context.write_line(instruction, "convert to {type}");
        si

        to_string() -> string =>
            "cast:[{type}]({value})";
    si
si