namespace IR.Values is
    use Semantic.Types.Type;
    
    class NEW: Value is
        has_type: bool => type?;
        type: Type;
        constructor: Semantic.Symbols.Function;
        arguments: Collections.List[Value];

        init(
            type: Type,
            constructor: Semantic.Symbols.Function,
            arguments: Collections.List[Value]
        ) is
            super.init();

            assert type?;
            assert constructor?;
            assert arguments?;

            self.type = type;
            self.constructor = constructor;
            self.arguments = arguments;
        si

        gen(context: IR.CONTEXT) is
            for a in arguments do
                gen(a, context);
            od

            context.write_line("newobj {constructor.get_il_reference()}");
        si

        to_string() -> string =>
            "new:[{type}](\"{constructor.name}\",{arguments | .to_string(",")})";
    si
si