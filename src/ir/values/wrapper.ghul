namespace IR.Values is
    use Semantic.Types.Type;

    class WRAPPER: Value is
        has_type: bool => type?;
        has_address: bool => value.has_address;
        type: Type => if value? then value.type else null fi;
        value: Value public;

        init(
            value: Value
        ) is
            super.init();

            self.value = value;
        si

        init() is
            super.init();
        si

        gen(context: IR.CONTEXT) is
            assert value? else "generate wrapper without value";

            gen(value, context);
        si

        gen_address(context: IR.CONTEXT) is
            assert value? else "generate wrapper without value";

            value.gen_address(context);
        si
        
        to_string() -> string =>
            "wrapper:[{type}]({value})";        
    si
si
