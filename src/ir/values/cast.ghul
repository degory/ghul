namespace IR.Values is
    use Semantic.Types.Type;

    class CAST: Value is
        has_type: bool => type?;
        type: Type;
        value: Value;

        init(
            type: Type,
            value: Value
        ) is
            super.init();

            assert type?;
            assert value?;

            self.type = type;
            self.value = value;
        si

        gen(context: IR.CONTEXT) is
            gen(value, context);

            if value.is_value_type then
                context.write_line("box {value.type.get_il_type()}");
            fi

            context.write_line("isinst {type.get_il_type()}");
        si

        to_string() -> string =>
            "cast:[{type}]({value})";
    si
si