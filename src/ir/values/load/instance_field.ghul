namespace IR.Values.Load is
    use TypeTyped = Semantic.Types.Typed;
    use SymbolBase = Semantic.Symbols.Symbol;

    class INSTANCE_FIELD: SYMBOL, TypeTyped is
        is_consumable: bool => true;

        init(from: Value, symbol: SymbolBase) is
            super.init(from, symbol);

            assert from?;
        si

        gen(context: IR.CONTEXT) is
            gen(from, context);
            context.write_line("ldfld " + symbol.get_il_reference());
        si

        gen_address(context: IR.CONTEXT) is
            gen(from, context);
            context.write_line("ldflda " + symbol.get_il_reference());
        si

        to_string() -> string =>
            "load:[" + type + "](" + from + ",\"" + symbol.name + "\")";
    si
si