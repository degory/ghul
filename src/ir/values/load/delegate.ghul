namespace IR.Values.Load is
    use IO.Std;

    use System.NotImplementedException;
    use System.Text.StringBuilder;

    use TypeTyped = Semantic.Types.Typed;
    use Semantic.Types.Type;
    use SymbolBase = Semantic.Symbols.Symbol;

    class DELEGATE: Value, TypeTyped is
        function: Value;
        frame: Value;
        type: Type;
        has_type: bool => type?;

        init(type: Type, function: Value, frame: Value) is
            self.type = type;

            self.function = function;
            self.frame = frame;
        si

        gen(context: IR.CONTEXT) is
            gen(frame, context);
            gen(function, context);
            context.write_line("newobj instance void {type.get_il_type()}::'.ctor'(object, native int)");
        si

        to_string() -> string =>
            "delegate:[{type}]({frame},{function}\")";
    si
si
