namespace IR.Values is
    use TypeTyped = Semantic.Types.Typed;
    use Semantic.Types.Type;

    class LIST: Value, TypeTyped is
        has_type: bool => type?;
        type: Type;

        values: Collections.List[Value];

        init(type: Type, values: Collections.List[Value]) is
            super.init();

            assert type?;
            assert values?;

            self.type = type;
            self.values = values;
        si

        gen(context: IR.CONTEXT) is
            let call = new System.Text.StringBuilder();

            for v in values do
                // TODO: do we need to pop after each value?
                gen(v, context);
            od
        si

        to_string() -> string =>
            "list:[{type}]({values})";
    si
si