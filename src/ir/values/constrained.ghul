namespace IR.Values is
    use Semantic.Types.Type;

    class CONSTRAINED: Value is
        value: Value;
        has_type: bool => type?;
        type: Type => value.type;
        is_value_type: bool => false;

        init(
            value: Value
        ) is
            super.init();

            assert value?;

            self.value = ADDRESS(value, value.type);
        si

        gen(context: IR.CONTEXT) is
            value.gen(context);

                context.write_line("constrained. {type.get_il_type()}");
            si

            to_string() -> string =>
                "constrained:[{type}]({value})";
    si
si
