namespace IR is
    class BLOCK_CONTEXT: Disposable is
        _context: IR.CONTEXT;

        block: IR.Values.BLOCK;

        init(context: IR.CONTEXT, type: Semantic.Types.Type) is
            _context = context;
            block = new IR.Values.BLOCK(type);
            _context.enter_buffer(true);
        si

        close() -> IR.Values.BLOCK is
            assert _context? else "closing disposed block";

            let result = block;
            block.set_block(_context.leave_buffer());
            _context = null;
            block = null;

            return result;
        si

        dispose() is
            if _context? then
                block.set_block(_context.leave_buffer());
                _context = null;
                block = null;
            fi
        si
    si
si